{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About robopy \ud83e\udd16\ud83d\udc0d","text":"<p>Python \u3060\u3051\u3067\u30ed\u30dc\u30c3\u30c8\u3092\u52d5\u304b\u3059\u305f\u3081\u306eAPI\u3067\u3059. \u7814\u7a76\u5ba4\u306e\u6a5f\u5668\u306a\u3089\u5927\u4f53\u52d5\u304b\u305b\u308b\u306f\u305a\u3067\u3059.</p> <ul> <li>OpenManipulatorX</li> <li>WidowX Robot Arm</li> <li>Rakuda2</li> <li>Intel Realsense</li> </ul> <p>\u7279\u6b8a\u306a\u4f9d\u5b58\u95a2\u4fc2(ROS \u3084 librealsense)\u7121\u3057\u3067\u30ed\u30dc\u30c3\u30c8\u3092\u52d5\u304b\u3057\u305f\u308a\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u305f\u308a\u3067\u304d\u307e\u3059.</p> <pre><code>pip install git+https://github.com/nomutin/robopy.git\n</code></pre> <pre><code>from robopy import RobotDriver, ControlTable, CameraDriver\n\nleader = RobotDriver(port_name=\"/dev/ttyUSB0\")\nfollower = RobotDriver(port_name=\"/dev/ttyUSB1\")\ncamera = CameraDriver(camera_id=0)\naction_list, observation_list = [], []\n\nfor _ in range(100):\n    leader_position = leader.read(ControlTable.PRESENT_POSITION)\n    follower.write(ControlTable.GOAL_POSITION, leader_position)\n    action_list.append(leader_position)\n    observation_list.append(camera.get_frame())\n</code></pre>"},{"location":"getting-started/","title":"Getting Started","text":"<p>\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304b\u3089\u5b9f\u884c\u307e\u3067\u3001ROS\u3084\u305d\u306e\u4ed6\u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093. \u74b0\u5883\u3084\u4f7f\u7528\u3057\u3066\u3044\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u306b\u5408\u308f\u305b\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044.</p>"},{"location":"getting-started/#with-package-manager-recommended","title":"with Package Manager (recommended)","text":"<p>\u30d1\u30c3\u30b1\u30fc\u30b8\u7ba1\u7406\u30c4\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u308b\u306e\u304c\u7121\u96e3\u3067\u3059. \u30e1\u30b8\u30e3\u30fc\u306a\u30c4\u30fc\u30eb\u306fgithub\u304b\u3089\u306e\u30d3\u30eb\u30c9\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u305d\u308c\u3089\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046.</p> pipenvpoetryrye <pre><code>pipenv install git+https://github.com/nomutin/robopy.git\n</code></pre> <pre><code>poetry add git+https://github.com/nomutin/robopy.git\n</code></pre> <pre><code>rye add robopy --git+https://github.com/nomutin/robopy.git\n</code></pre> <p>Tip</p> <p>pipenv \u306f\u30a4\u30de\u30a4\u30c1\uff08pyproject.toml\u30d9\u30fc\u30b9\u3067\u306f\u306a\u304flock\u3082\u9045\u3044\uff09\u306a\u306e\u3067\u3001 \u4ed6\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u3092\u4f7f\u3046\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059.</p>"},{"location":"getting-started/#with-pip","title":"with pip","text":"<p>\u30ed\u30dc\u30c3\u30c8\u7528\u306ePC\u306a\u3069\u3001\u4eee\u60f3\u74b0\u5883\u3092\u4f7f\u3044\u305f\u304f\u306a\u3044\u5834\u5408\u306fpip\u3092\u4f7f\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044.</p> <pre><code>pip install git+https://github.com/nomutin/robopy.git\n</code></pre>"},{"location":"getting-started/#with-git","title":"with git","text":"<p>\u3082\u3057 robopy \u306e\u6a5f\u80fd\u3092\u3044\u3058\u308a\u305f\u3044\u5834\u5408\u306f\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u76f4\u63a5\u3044\u3058\u308b\u306e\u3082\u3044\u3044\u3067\u3057\u3087\u3046. \u8a73\u7d30\u306a\u4ed5\u69d8\u306b\u3064\u3044\u3066\u306f API Document \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044. Issue \u3084 Pull Request \u306f\u5927\u6b53\u8fce\u3067\u3059.</p> <pre><code>git clone https://github.com/nomutin/robopy.git\n</code></pre>"},{"location":"qa/","title":"Q&amp;A","text":""},{"location":"qa/#cameradriver-camera_id","title":"<code>CameraDriver</code> \u3067\u4f7f\u7528\u3059\u308b <code>camera_id</code> \u304c\u308f\u304b\u3089\u306a\u3044","text":"<p>\u307e\u305a\u3001USB\u30dd\u30fc\u30c8\u306b\u30ab\u30e1\u30e9\u304c\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044. \u305d\u306e\u5f8c\u3001opencv-python \u3092\u4f7f\u3063\u3066\u7dcf\u5f53\u305f\u308a\u3067\u30ab\u30e1\u30e9\u3092\u63a2\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059.</p> <pre><code>import cv2\n\navailable_cameras = []\n\nfor camera_id in range(20):\n    capture = cv2.VideoCapture(camera_id, cv2.CAP_ANY)\n    if not capture.isOpened() or not capture.read()[0]:\n        continue\n    available_cameras.append(camera_id)\n    capture.release()\n\nprint(f\"Available cameras: {available_cameras}\")\n</code></pre>"},{"location":"qa/#cameradriver","title":"<code>CameraDriver</code> \u306e\u6620\u50cf\u304c\u898b\u305f\u3044","text":"<p>Flask \u3092\u4f7f\u3046\u3068\u898b\u3084\u3059\u3044\u3067\u3059.</p> <pre><code>from collections.abc import Generator\nimport cv2\nfrom flask import Flask, Response\n\nCAMERA_INDEX = 0\nMIMETYPE = \"multipart/x-mixed-replace; boundary=frame\"\nFRAME_BOUNDARY = b\"--frame\\r\\nContent-Type: image/jpeg\\r\\n\\r\\n\"\napp = Flask(__name__)\n\ndef video_frame_generator() -&gt; Generator[bytes, None, None]:\n    cap = cv2.VideoCapture(CAMERA_INDEX)\n    while True:\n        success, frame = cap.read()\n        if not success:\n            break\n        _, buffer = cv2.imencode(\".jpg\", frame)\n        frame_bytes = buffer.tobytes()\n        yield b\"\".join([FRAME_BOUNDARY, frame_bytes, b\"\\r\\n\"])\n\n@app.route(\"/\")\ndef stream_video() -&gt; Response:\n    return Response(video_frame_generator(), mimetype=MIMETYPE)\n\nif __name__ == \"__main__\":\n    app.run(host=\"localhost\", port=8000)\n</code></pre> <p>Tip</p> <p>\u30ea\u30e2\u30fc\u30c8\u30b5\u30fc\u30d0\u3067\u5b9f\u884c\u3059\u308b\u969b\u306b\u306f<code>80</code>\u306eSSH\u30c8\u30f3\u30cd\u30ea\u30f3\u30b0\u304c\u5fc5\u8981\u3067\u3059. <pre><code>ssh -L 8000:localhost:8000 server_name\n</code></pre></p>"},{"location":"qa/#robotdriver-port_nameservo_idbaudrate","title":"<code>RobotDriver</code> \u3067\u4f7f\u7528\u3059\u308b <code>port_name</code>\u30fb<code>servo_id</code>\u30fb<code>baudrate</code> \u304c\u308f\u304b\u3089\u306a\u3044","text":"<p><code>port_name</code> \u306f, Linux \u306e\u5834\u5408\u306f <code>ls /dev/ttyUSB*</code>, Mac \u306e\u5834\u5408\u306f<code>ls /dev/tty.*</code> \u3067\u8868\u793a\u3055\u308c\u308b\u30dd\u30fc\u30c8\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059.</p> <p><code>servo_id</code> \u3068 <code>baudrate</code> \u306f, \u5404\u30b5\u30fc\u30dc\u306b\u66f8\u304d\u8fbc\u307e\u308c\u3066\u3044\u308b\u5024\u306e\u6b63\u3057\u3044\u7d44\u307f\u5408\u308f\u305b\u3067\u306a\u3044\u3068\u901a\u4fe1\u3067\u304d\u307e\u305b\u3093. \u7dcf\u5f53\u305f\u308a\u3067\u8abf\u3079\u307e\u3057\u3087\u3046.</p> <pre><code>from itertools import product\nfrom dynamixel_sdk import COMM_SUCCESS, PortHandler, Protocol2PacketHandler\n\ndevice_name = \"/dev/ttyUSB1\"\nbaudrates = [9600, 57600, 115200, 1000000, 2000000, 3000000, 4000000]\nservo_ids = list(range(254))\n\nport_handler = PortHandler(device_name)\npacket_handler = Protocol2PacketHandler()\n\nif not port_handler.openPort():\n    raise RuntimeError(\"Failed to open port.\")\n\nfor baudrate, servo_id in product(baudrates, servo_ids):\n    if not port_handler.setBaudRate(baudrate):\n        continue\n\n    _, comm_result, dxl_error = packet_handler.ping(port_handler, servo_id)\n    if comm_result == COMM_SUCCESS:\n        print(f\"[{baudrate=} {servo_id=}] ping succeeded.\")\n\n    port_handler.closePort()\n</code></pre>"},{"location":"qa/#robotdriver","title":"<code>RobotDriver</code> \u3067\u53d6\u5f97\u3067\u304d\u308b\u5024\u306e\u4e00\u89a7\u3092\u77e5\u308a\u305f\u3044","text":"<p>rich \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066 Dynamixel Wizard \u307f\u305f\u3044\u306a\u3053\u3068\u304c\u3067\u304d\u307e\u3059.</p> <pre><code>from rich.live import Live\nfrom rich.table import Table\n\nfrom robopy import ControlTable, RobotDriver\n\nport_name = \"/dev/ttyUSB0\"\nservo_ids = [1, 2, 3, 4, 5]\nbaudrate = 1_000_000\n\nrobot = RobotDriver(\n    port_name=port_name,\n    baudrate=baudrate,\n    servo_ids=servo_ids,\n)\n\n\ndef generate_table() -&gt; Table:\n    table = Table(title=f\"Control Table of {port_name}\")\n    table.add_column(\"Address\", justify=\"right\")\n    table.add_column(\"Table Item\", justify=\"left\")\n    table.add_column(\"Dtype\", justify=\"right\")\n    table.add_column(\"Access\", justify=\"left\")\n\n    for servo_id in servo_ids:\n        table.add_column(f\"#{servo_id}\", justify=\"right\")\n\n    for control_table in ControlTable:\n        if control_table.value.access == \"R\":\n            style = \"cyan\"\n        if control_table.value.access == \"R/W(NVM)\":\n            style = \"green\"\n        if control_table.value.access == \"R/W\":\n            style = \"magenta\"\n\n        table.add_row(\n            str(control_table.value.address),\n            control_table.name,\n            control_table.value.dtype.name,\n            control_table.value.access,\n            *[str(i) for i in robot.read(control_table)],\n            style=style,\n        )\n    return table\n\n\nwith Live(generate_table()) as live:\n    while True:\n        live.update(generate_table())\n</code></pre>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#_1","title":"\u30ab\u30e1\u30e9","text":"<p>Web \u30ab\u30e1\u30e9\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f, <code>CameraDriver</code> \u3092\u4f7f\u7528\u3057\u307e\u3059. \u8a73\u7d30\u306f API reference \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044. </p>"},{"location":"usage/#_2","title":"\u30ed\u30dc\u30c3\u30c8","text":"<p>\u30ed\u30dc\u30c3\u30c8\u3092\u5236\u5fa1\u3059\u308b\u306b\u306f, <code>RobotDriver</code> \u3092\u4f7f\u7528\u3057\u307e\u3059. \u307e\u305f\u3001\u5236\u5fa1\u3067\u304d\u308b\u9805\u76ee\u306b\u3064\u3044\u3066\u306f <code>ControlTable</code> \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044.</p>"},{"location":"usage/#_3","title":"\u4f8b","text":""},{"location":"usage/#leader-follower","title":"Leader-Follower","text":"<p>2\u3064\u306e RobotDriver \u3092\u7528\u3044\u3066\u540c\u671f\u51e6\u7406\u3067 Leader-Fllower \u304c\u5b9f\u73fe\u3067\u304d\u307e\u3059.  </p> <ul> <li>\u30c8\u30eb\u30af\u306e ON/OFF \u306b\u306f <code>RobotDriver.write</code> \u306e\u30a2\u30c9\u30ec\u30b9\u306b <code>ControlTable.TORQUE_ENABLE</code> \u3092\u6307\u5b9a\u3057\u307e\u3059.</li> <li>\u30c8\u30eb\u30af\u306e\u6709\u52b9\u304b\u306b\u306f <code>1</code> \u3092\u5404\u30b5\u30fc\u30dc\u306b\u9001\u4fe1\u3057\u307e\u3059.</li> <li>\u30c8\u30eb\u30af\u306e\u7121\u52b9\u5316\u306b\u306f <code>0</code> \u3092\u5404\u30b5\u30fc\u30dc\u306b\u9001\u4fe1\u3057\u307e\u3059.</li> <li>\u4f4d\u7f6e\u306e\u53d6\u5f97\u306b\u306f <code>RobotDriver.read</code> \u306e\u30a2\u30c9\u30ec\u30b9\u306b <code>ControlTable.GOAL_POSITION</code> \u3092\u6307\u5b9a\u3057\u307e\u3059.</li> <li>\u4f4d\u7f6e\u306e\u8a2d\u5b9a\u306b\u306f <code>RobotDriver.write</code> \u306e\u30a2\u30c9\u30ec\u30b9\u306b <code>ControlTable.GOAL_POSITION</code> \u3092\u6307\u5b9a\u3057\u307e\u3059.</li> </ul> <pre><code>import time\n\nimport numpy as np\n\nfrom robopy import CameraDriver, ControlTable, RobotDriver\n\n# Constants\nleader_port, follower_port = \"/dev/ttyUSB0\", \"/dev/ttyUSB1\"\nbaudrate = 1_000_000\nservo_ids = [1, 2, 3, 4, 5]\ncamera_id = 4\n\n# Initialize\nleader = RobotDriver(leader_port, baudrate=baudrate, servo_ids=servo_ids)\nfollower = RobotDriver(follower_port, baudrate=baudrate, servo_ids=servo_ids)\ncamera_driver = CameraDriver(camera_id=camera_id)\ninput()\n\n# Safety Check\nleader.write(ControlTable.TORQUE_ENABLE, [1] * len(servo_ids))\nfollower.write(ControlTable.TORQUE_ENABLE, [1] * len(servo_ids))\n\nleader_posisition = leader.read(ControlTable.PRESENT_POSITION)\nfollower_position = follower.read(ControlTable.PRESENT_POSITION)\ndelta = np.array(leader_posisition) - np.array(follower_position)\nfor i in range(30):\n    current_position = follower_position + delta * i / 30\n    follower.write(\n        control_table=ControlTable.GOAL_POSITION,\n        values=current_position.tolist(),\n    )\n    time.sleep(0.5)\n\nleader.write(ControlTable.TORQUE_ENABLE, [0] * len(servo_ids))\ninput()\n\n# Main Loop\nwhile True:\n    s = time.monotonic()\n    current_position = leader.read(ControlTable.PRESENT_POSITION)\n    follower.write(\n        control_table=ControlTable.GOAL_POSITION,\n        values=current_position,\n    )\n    frame = camera_driver.get_frame()\n    print(\"FPS:\", 1 / (time.monotonic() - s))\n</code></pre>"},{"location":"api/camera/","title":"camera.py","text":"<p>Web\u30ab\u30e1\u30e9\u306e\u5236\u5fa1\u3092\u884c\u3046\u30e2\u30b8\u30e5\u30fc\u30eb.</p>"},{"location":"api/camera/#src.robopy.camera.CameraDriver","title":"<code>CameraDriver</code>","text":"<p>               Bases: <code>VideoCapture</code></p> <p>OpenCV\u3092\u7528\u3044\u305f, Web\u30ab\u30e1\u30e9\u306e\u5236\u5fa1\u3092\u884c\u3046\u30af\u30e9\u30b9.</p> Note <ul> <li>\u30ab\u30e1\u30e9\u304c\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044 <code>width</code>\u30fb<code>height</code>\u30fb<code>fps</code>\u3092\u6307\u5b9a\u3059\u308b\u3068,   \u3053\u306e\u6642\u70b9\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b.</li> <li>Intel Realsense \u306e (width, height) = (640, 480) or (320, 240).</li> <li>Intel Realsense \u306e fps = 30 or 60.</li> </ul> <p>Parameters:</p> Name Type Description Default <code>camera_id</code> <code>int</code> <p>\u30ab\u30e1\u30e9\u306eID.</p> required <code>width</code> <code>int</code> <p>\u753b\u50cf\u306e\u5e45.</p> <code>320</code> <code>height</code> <code>int</code> <p>\u753b\u50cf\u306e\u9ad8\u3055.</p> <code>240</code> <code>fps</code> <code>int</code> <p>\u30ab\u30e1\u30e9\u306eFPS.</p> <code>60</code> <p>Raises:</p> Type Description <code>RuntimeError</code> <p>\u30ab\u30e1\u30e9\u306e\u521d\u671f\u5316\u306b\u5931\u6557\u3057\u305f\u5834\u5408.</p> Source code in <code>src/robopy/camera.py</code> <pre><code>class CameraDriver(cv2.VideoCapture):\n    \"\"\"\n    OpenCV\u3092\u7528\u3044\u305f, Web\u30ab\u30e1\u30e9\u306e\u5236\u5fa1\u3092\u884c\u3046\u30af\u30e9\u30b9.\n\n    Note\n    ----\n    - \u30ab\u30e1\u30e9\u304c\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044 `width`\u30fb`height`\u30fb`fps`\u3092\u6307\u5b9a\u3059\u308b\u3068,\n      \u3053\u306e\u6642\u70b9\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b.\n    - Intel Realsense \u306e (width, height) = (640, 480) or (320, 240).\n    - Intel Realsense \u306e fps = 30 or 60.\n\n    Parameters\n    ----------\n    camera_id : int\n        \u30ab\u30e1\u30e9\u306eID.\n    width : int\n        \u753b\u50cf\u306e\u5e45.\n    height : int\n        \u753b\u50cf\u306e\u9ad8\u3055.\n    fps : int\n        \u30ab\u30e1\u30e9\u306eFPS.\n\n    Raises\n    ------\n    RuntimeError\n        \u30ab\u30e1\u30e9\u306e\u521d\u671f\u5316\u306b\u5931\u6557\u3057\u305f\u5834\u5408.\n    \"\"\"\n\n    def __init__(\n        self,\n        camera_id: int,\n        width: int = 320,\n        height: int = 240,\n        fps: int = 60,\n    ) -&gt; None:\n        super().__init__(index=camera_id)\n        self.camera_id = camera_id\n        self.set(cv2.CAP_PROP_FPS, fps)\n        self.set(cv2.CAP_PROP_FRAME_WIDTH, width)\n        self.set(cv2.CAP_PROP_FRAME_HEIGHT, height)\n\n        if not self.isOpened():\n            msg = f\"Failed to open camera {camera_id}\"\n            raise RuntimeError(msg)\n\n    def get_frame(self) -&gt; npt.ArrayLike:\n        \"\"\"\n        \u73fe\u5728\u306e\u753b\u50cf\u3092 `np.ndarray` \u3068\u3057\u3066\u8fd4\u3059.\n\n        Example\n        -------\n        ```python\n        driver = CameraDriver(camera_id)\n        frame = driver.get_frame()\n        print(frame.shape)\n        ```\n\n        Note\n        ----\n        \u30ab\u30e1\u30e9\u306b\u3088\u3063\u3066\u306f, \u5e30\u3063\u3066\u304f\u308b\u753b\u50cf\u304c BGR \u306b\u306a\u3063\u3066\u3044\u305f\u308a,\n        \u30c1\u30e3\u30cd\u30eb\u306e\u6b21\u5143\u304c\u7121\u304b\u3063\u305f\u308a\u3059\u308b\u306e\u3067\u6ce8\u610f.\n\n        Returns\n        -------\n        npt.ArrayLike\n            \u30ab\u30e1\u30e9\u304b\u3089\u53d6\u5f97\u3057\u305f\u30d5\u30ec\u30fc\u30e0.\n            `self.height`\u30fb`self.width`\u306e\u30b5\u30a4\u30ba\u306e\u753b\u50cf.\n\n        Raises\n        ------\n        RuntimeError\n            \u30ab\u30e1\u30e9\u304b\u3089\u306e\u30d5\u30ec\u30fc\u30e0\u53d6\u5f97\u306b\u5931\u6557\u3057\u305f\u5834\u5408.\n\n        \"\"\"\n        ret, frame = self.read()\n        if not ret:\n            msg = f\"camera: {self.camera_id}\u304b\u3089\u306e\u30d5\u30ec\u30fc\u30e0\u53d6\u5f97\u306b\u5931\u6557.\"\n            raise RuntimeError(msg)\n        return np.array(frame)\n\n    def __del__(self) -&gt; None:\n        \"\"\"\n        GC\u3067\u81ea\u52d5\u7684\u306b\u30ab\u30e1\u30e9\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u89e3\u653e\u3059\u308b.\n\n        Note:\n        ----\n        python \u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u304c `CameraDriver`\u304c\u4f7f\u308f\u308c\u306a\u304f\u306a\u3063\u305f\u3068\u89e3\u91c8\u3059\u308b\u3068,\n        \u81ea\u52d5\u7684\u306b\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u308b.\n\n        \"\"\"\n        self.release()\n        cv2.destroyAllWindows()\n</code></pre>"},{"location":"api/camera/#src.robopy.camera.CameraDriver.get_frame","title":"<code>get_frame()</code>","text":"<p>\u73fe\u5728\u306e\u753b\u50cf\u3092 <code>np.ndarray</code> \u3068\u3057\u3066\u8fd4\u3059.</p> Example <pre><code>driver = CameraDriver(camera_id)\nframe = driver.get_frame()\nprint(frame.shape)\n</code></pre> Note <p>\u30ab\u30e1\u30e9\u306b\u3088\u3063\u3066\u306f, \u5e30\u3063\u3066\u304f\u308b\u753b\u50cf\u304c BGR \u306b\u306a\u3063\u3066\u3044\u305f\u308a, \u30c1\u30e3\u30cd\u30eb\u306e\u6b21\u5143\u304c\u7121\u304b\u3063\u305f\u308a\u3059\u308b\u306e\u3067\u6ce8\u610f.</p> <p>Returns:</p> Type Description <code>ArrayLike</code> <p>\u30ab\u30e1\u30e9\u304b\u3089\u53d6\u5f97\u3057\u305f\u30d5\u30ec\u30fc\u30e0. <code>self.height</code>\u30fb<code>self.width</code>\u306e\u30b5\u30a4\u30ba\u306e\u753b\u50cf.</p> <p>Raises:</p> Type Description <code>RuntimeError</code> <p>\u30ab\u30e1\u30e9\u304b\u3089\u306e\u30d5\u30ec\u30fc\u30e0\u53d6\u5f97\u306b\u5931\u6557\u3057\u305f\u5834\u5408.</p> Source code in <code>src/robopy/camera.py</code> <pre><code>def get_frame(self) -&gt; npt.ArrayLike:\n    \"\"\"\n    \u73fe\u5728\u306e\u753b\u50cf\u3092 `np.ndarray` \u3068\u3057\u3066\u8fd4\u3059.\n\n    Example\n    -------\n    ```python\n    driver = CameraDriver(camera_id)\n    frame = driver.get_frame()\n    print(frame.shape)\n    ```\n\n    Note\n    ----\n    \u30ab\u30e1\u30e9\u306b\u3088\u3063\u3066\u306f, \u5e30\u3063\u3066\u304f\u308b\u753b\u50cf\u304c BGR \u306b\u306a\u3063\u3066\u3044\u305f\u308a,\n    \u30c1\u30e3\u30cd\u30eb\u306e\u6b21\u5143\u304c\u7121\u304b\u3063\u305f\u308a\u3059\u308b\u306e\u3067\u6ce8\u610f.\n\n    Returns\n    -------\n    npt.ArrayLike\n        \u30ab\u30e1\u30e9\u304b\u3089\u53d6\u5f97\u3057\u305f\u30d5\u30ec\u30fc\u30e0.\n        `self.height`\u30fb`self.width`\u306e\u30b5\u30a4\u30ba\u306e\u753b\u50cf.\n\n    Raises\n    ------\n    RuntimeError\n        \u30ab\u30e1\u30e9\u304b\u3089\u306e\u30d5\u30ec\u30fc\u30e0\u53d6\u5f97\u306b\u5931\u6557\u3057\u305f\u5834\u5408.\n\n    \"\"\"\n    ret, frame = self.read()\n    if not ret:\n        msg = f\"camera: {self.camera_id}\u304b\u3089\u306e\u30d5\u30ec\u30fc\u30e0\u53d6\u5f97\u306b\u5931\u6557.\"\n        raise RuntimeError(msg)\n    return np.array(frame)\n</code></pre>"},{"location":"api/camera/#src.robopy.camera.CameraDriver.__del__","title":"<code>__del__()</code>","text":"<p>GC\u3067\u81ea\u52d5\u7684\u306b\u30ab\u30e1\u30e9\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u89e3\u653e\u3059\u308b.</p> Note: <p>python \u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u304c <code>CameraDriver</code>\u304c\u4f7f\u308f\u308c\u306a\u304f\u306a\u3063\u305f\u3068\u89e3\u91c8\u3059\u308b\u3068, \u81ea\u52d5\u7684\u306b\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u308b.</p> Source code in <code>src/robopy/camera.py</code> <pre><code>def __del__(self) -&gt; None:\n    \"\"\"\n    GC\u3067\u81ea\u52d5\u7684\u306b\u30ab\u30e1\u30e9\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u89e3\u653e\u3059\u308b.\n\n    Note:\n    ----\n    python \u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u304c `CameraDriver`\u304c\u4f7f\u308f\u308c\u306a\u304f\u306a\u3063\u305f\u3068\u89e3\u91c8\u3059\u308b\u3068,\n    \u81ea\u52d5\u7684\u306b\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u308b.\n\n    \"\"\"\n    self.release()\n    cv2.destroyAllWindows()\n</code></pre>"},{"location":"api/control-table/","title":"control_table.py","text":"<p>Dynamixel \u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30c6\u30fc\u30d6\u30eb\u95a2\u9023.</p> References <ul> <li>ROBOTIS E-manual</li> <li>X Series Control table</li> </ul>"},{"location":"api/control-table/#src.robopy.control_table.Dtype","title":"<code>Dtype</code>","text":"<p>               Bases: <code>Enum</code></p> <p><code>ControlItem</code>\u306e\u30c7\u30fc\u30bf\u578b.</p> <p>Attributes:</p> Name Type Description <code>UINT8</code> <code>int</code> <p>8bit\u7b26\u53f7\u306a\u3057\u6574\u6570.</p> <code>UINT16</code> <code>int</code> <p>16bit\u7b26\u53f7\u306a\u3057\u6574\u6570.</p> <code>UINT32</code> <code>int</code> <p>32bit\u7b26\u53f7\u306a\u3057\u6574\u6570.</p> <code>INT16</code> <code>int</code> <p>16bit\u7b26\u53f7\u3042\u308a\u6574\u6570.</p> <code>INT32</code> <code>int</code> <p>32bit\u7b26\u53f7\u3042\u308a\u6574\u6570.</p> Source code in <code>src/robopy/control_table.py</code> <pre><code>class Dtype(Enum):\n    \"\"\"\n    `ControlItem`\u306e\u30c7\u30fc\u30bf\u578b.\n\n    Attributes\n    ----------\n    UINT8 : int\n        8bit\u7b26\u53f7\u306a\u3057\u6574\u6570.\n    UINT16 : int\n        16bit\u7b26\u53f7\u306a\u3057\u6574\u6570.\n    UINT32 : int\n        32bit\u7b26\u53f7\u306a\u3057\u6574\u6570.\n    INT16 : int\n        16bit\u7b26\u53f7\u3042\u308a\u6574\u6570.\n    INT32 : int\n        32bit\u7b26\u53f7\u3042\u308a\u6574\u6570.\n\n    \"\"\"\n\n    UINT8 = auto()\n    UINT16 = auto()\n    UINT32 = auto()\n    INT16 = auto()\n    INT32 = auto()\n</code></pre>"},{"location":"api/control-table/#src.robopy.control_table.ControlItem","title":"<code>ControlItem</code>  <code>dataclass</code>","text":"<p><code>ControlTable</code>\u306e\u5404\u9805\u76ee\u306e\u30c7\u30fc\u30bf\u69cb\u9020.</p> <p>Attributes:</p> Name Type Description <code>address</code> <code>int</code> <p>\u30e1\u30e2\u30ea\u30a2\u30c9\u30ec\u30b9.</p> <code>num_bytes</code> <code>Literal[1, 2, 4]</code> <p>\u5360\u6709\u3059\u308b\u30d0\u30a4\u30c8\u6570.</p> <code>dtype</code> <code>Dtype</code> <p>\u30c7\u30fc\u30bf\u578b.</p> <code>access</code> <code>Literal['R', 'R/W', 'R/W(NVM)']</code> <p>\u30a2\u30af\u30bb\u30b9\u6a29\u9650. <code>NVM</code>(\u4e0d\u63ee\u767a\u30e1\u30e2\u30ea)\u306e\u66f8\u304d\u63db\u3048\u3092\u884c\u3046\u5834\u5408\u306f\u30c8\u30eb\u30af\u3092\u5207\u308b\u5fc5\u8981\u304c\u3042\u308b.</p> Source code in <code>src/robopy/control_table.py</code> <pre><code>@dataclass\nclass ControlItem:\n    \"\"\"\n    `ControlTable`\u306e\u5404\u9805\u76ee\u306e\u30c7\u30fc\u30bf\u69cb\u9020.\n\n    Attributes\n    ----------\n    address : int\n        \u30e1\u30e2\u30ea\u30a2\u30c9\u30ec\u30b9.\n    num_bytes : Literal[1, 2, 4]\n        \u5360\u6709\u3059\u308b\u30d0\u30a4\u30c8\u6570.\n    dtype : Dtype\n        \u30c7\u30fc\u30bf\u578b.\n    access : Literal['R', 'R/W', 'R/W(NVM)']\n        \u30a2\u30af\u30bb\u30b9\u6a29\u9650.\n        `NVM`(\u4e0d\u63ee\u767a\u30e1\u30e2\u30ea)\u306e\u66f8\u304d\u63db\u3048\u3092\u884c\u3046\u5834\u5408\u306f\u30c8\u30eb\u30af\u3092\u5207\u308b\u5fc5\u8981\u304c\u3042\u308b.\n\n    \"\"\"\n\n    address: int\n    num_bytes: Literal[1, 2, 4]\n    dtype: Dtype\n    access: Literal[\"R\", \"R/W\", \"R/W(NVM)\"]\n</code></pre>"},{"location":"api/control-table/#src.robopy.control_table.ControlTable","title":"<code>ControlTable</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Dynamixel\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30c6\u30fc\u30d6\u30eb.</p> <p>Attributes:</p> Name Type Description <code>MODEL_NUMBER</code> <code>ControlItem</code> <p>Dynamixel \u306e\u30e2\u30c7\u30eb\u756a\u53f7. \u30e2\u30c7\u30eb\u56fa\u6709\u306e\u5024\u3092\u4fdd\u6301\u3059\u308b. \u7570\u306a\u308b\u7a2e\u985e\u306e Dynamixel \u3092\u6df7\u5728\u3057\u3066\u4f7f\u7528\u3059\u308b\u969b\u306e\u500b\u4f53\u8b58\u5225\u306a\u3069\u306b\u4f7f\u7528\u3067\u304d\u308b.</p> <code>MODEL_INFORMATION</code> <code>ControlItem</code> <p>Dynamixel\u306e\u30e2\u30c7\u30eb\u60c5\u5831. \u7570\u306a\u308b\u7a2e\u985e\u306e Dynamixel \u3092\u6df7\u5728\u3057\u3066\u4f7f\u7528\u3059\u308b\u969b\u306e\u500b\u4f53\u8b58\u5225\u306a\u3069\u306b\u4f7f\u7528\u3067\u304d\u308b.</p> <code>VERSION_OF_FIRMWARE</code> <code>ControlItem</code> <p>\u5185\u8535\u3055\u308c\u308b CPU \u306b\u66f8\u304d\u8fbc\u307e\u308c\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30d0\u30fc\u30b8\u30e7\u30f3. \u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u306e\u66f4\u65b0\u3092\u884c\u3063\u305f\u969b\u306b\u5408\u308f\u305b\u3066\u81ea\u52d5\u7684\u306b\u5909\u66f4\u3055\u308c\u308b.</p> <code>ID</code> <code>ControlItem</code> <p>\u5404 Dynamixel \u3092\u7279\u5b9a\u3059\u308b\u305f\u3081\u306e\u56fa\u6709\u306e\u5024\u30670~252\u306e\u7bc4\u56f2\u306e\u6570\u5024\u3067\u8a2d\u5b9a\u3059\u308b. \u540c\u4e00\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5185\u306b\u5b58\u5728\u3059\u308b Dynamixel \u306b\u306f\u5404\u3005\u7570\u306a\u308bID\u304c\u8981\u6c42\u3055\u308c\u308b.</p> <code>BAUDRATE</code> <code>ControlItem</code> <p>\u901a\u4fe1\u3059\u308b\u969b\u306e\u30dc\u30fc\u30ec\u30fc\u30c8. \u30db\u30b9\u30c8\u3068Dynamixel\u306e\u30dc\u30fc\u30ec\u30fc\u30c8\u306f\u4e00\u81f4\u3055\u305b\u308b\u5fc5\u8981\u304c\u3042\u308b. \u8a73\u3057\u304f\u306f <code>Baudrate</code> \u3092\u53c2\u7167.</p> <code>RETURN_DELAY_TIME</code> <code>ControlItem</code> <p>\u30d1\u30b1\u30c3\u30c8\u304c\u9001\u3089\u308c\u305f\u5f8c, \u30b9\u30c6\u30fc\u30bf\u30b9\u30d1\u30b1\u30c3\u30c8\u3092\u8fd4\u3059\u307e\u3067\u306e\u5f85\u3061\u6642\u9593. 0\u3092\u8a2d\u5b9a\u3057\u3066\u3082\u554f\u984c\u306a\u3044.</p> <p><code>Delay Time [us] = Value * 2 [us]</code></p> <code>DRIVE_MODE</code> <code>ControlItem</code> <p>\u30c7\u30d5\u30a9\u30eb\u30c8\u56de\u8ee2\u65b9\u5411\u30fb\u30c7\u30e5\u30a2\u30eb\u30b8\u30e7\u30a4\u30f3\u30c8\u30fb\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u69cb\u6210\u3092\u8a2d\u5b9a\u3059\u308b. \u30c7\u30d5\u30a9\u30eb\u30c8\u56de\u8ee2\u65b9\u5411\u306b\u3088\u308a\u306fPosition\u30fbVelocity\u30fbPWM\u306e\u5404\u6307\u4ee4\u306b\u3088\u308b\u30db\u30fc\u30f3\u306e\u56de\u8ee2\u65b9\u5411\u304c\u5909\u5316\u3059\u308b.</p> <ul> <li><code>0</code>: Direction of rotation (0:Normal, 1:Reverse)</li> <li><code>1</code>: Profile configuration (0:Master, 1:Slaver, X540\u30b7\u30ea\u30fc\u30ba\u306e\u307f)</li> <li><code>2</code>: Dual Joint (0:Velocity-based Profile, 1:Time-based Profile)</li> </ul> <code>OPERATING_MODE</code> <code>ControlItem</code> <p>\u52d5\u4f5c\u30e2\u30fc\u30c9. \u8a73\u3057\u304f\u306f <code>OperatingMode</code> \u3092\u53c2\u7167.</p> <code>SECONDARY_ID</code> <code>ControlItem</code> <p>Dynamixel\u306eSecondary ID. Secondary ID \u306f, ID \u3068\u540c\u69d8\u306b\u5404 Dynamixel \u3092\u8b58\u5225\u3059\u308b\u305f\u3081\u306b\u7528\u3044\u3089\u308c\u308b. \u306a\u304a, Secondary ID\u306b253\u4ee5\u4e0a\u306e\u5024\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u6a5f\u80fd\u3057\u306a\u3044.</p> <code>PROTOCOL_VERSION</code> <code>ControlItem</code> <p>\u901a\u4fe1\u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u30d0\u30fc\u30b8\u30e7\u30f3. \u7570\u306a\u308b\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u6df7\u5728\u3055\u305b\u3066\u4f7f\u7528\u3059\u308b\u4e8b\u306f\u3067\u304d\u306a\u3044. \u57fa\u672c\u7684\u306b\u306f1\u304b2\u3092\u9078\u629e\u3059\u308b.</p> <code>HOMING_OFFSET</code> <code>ControlItem</code> <p>\u3053\u306e\u5024\u304c\u771f\u306e\u73fe\u5728\u4f4d\u7f6e\u306b\u52a0\u7b97\u3055\u308c <code>PRESENT_POSITION</code> \u306b\u53cd\u6620\u3055\u308c\u308b. \u30aa\u30d5\u30bb\u30c3\u30c8\u4f4d\u7f6e\u3092\u30db\u30b9\u30c8\u5074\u3067\u306f\u7121\u304f Dynamixel \u5074\u306b\u6301\u305f\u305b\u308b\u969b\u306b\u4f7f\u7528\u3059\u308b. \u771f\u306e\u73fe\u5728\u4f4d\u7f6e\u3068\u306f, Multi Turn \u304c off\u30fbHoming Offset \u304c 0\u30fb Direction of rotation \u304c0\u306e\u6642\u306e<code>PRESENT_POSITION</code> \u3092\u610f\u5473\u3059\u308b.</p> <p><code>Position [deg] = Value * 360 [deg] / 4095</code></p> <code>MOVING_THRESHOLD</code> <code>ControlItem</code> <p><code>PRESENT_VELOCITY</code> \u306e\u7d76\u5bfe\u5024\u3068\u6bd4\u8f03\u3057\u305f\u7d50\u679c\u304c <code>MOVING</code> \u306b\u793a\u3055\u308c\u308b.</p> <p><code>Velocity [rpm] = Value * 0.229 [rpm]</code></p> <code>TEMPERATURE_LIMIT</code> <code>ControlItem</code> <p><code>PRESENT_TEMPERATURE</code> \u304c\u3053\u306e\u5024\u3092\u8d85\u3048\u308b\u3068 <code>HARDWARE_ERROR_STATUS</code> \u306e\u8a72\u5f53\u30d3\u30c3\u30c8\u304cON\u306b\u306a\u308a, <code>SHUTDOWN</code> \u3067\u6307\u5b9a\u3055\u308c\u305f\u52d5\u4f5c\u306b\u9077\u79fb\u3059\u308b.</p> <code>MAX_VOLTAGE_LIMIT</code> <code>ControlItem</code> <p><code>PRESENT_INPUT_VOLTAGE</code> \u304c\u3053\u306e\u5024\u3092\u8d85\u3048\u308b\u3068 <code>HARDWARE_ERROR_STATUS</code> \u306e\u8a72\u5f53\u30d3\u30c3\u30c8\u304cON\u306b\u306a\u308a, <code>SHUTDOWN</code> \u3067\u6307\u5b9a\u3055\u308c\u305f\u52d5\u4f5c\u306b\u9077\u79fb\u3059\u308b.</p> <p><code>Voltage [V] = Value * 0.1 [V]</code></p> <code>MIN_VOLTAGE_LIMIT</code> <code>ControlItem</code> <p><code>PRESENT_INPUT_VOLTAGE</code> \u304c\u3053\u306e\u5024\u3092\u4e0b\u56de\u308b\u3068 <code>HARDWARE_ERROR_STATUS</code> \u306e\u8a72\u5f53\u30d3\u30c3\u30c8\u304cON\u306b\u306a\u308a, <code>SHUTDOWN</code> \u3067\u6307\u5b9a\u3055\u308c\u305f\u52d5\u4f5c\u306b\u9077\u79fb\u3059\u308b.</p> <code>PWM_LIMIT</code> <code>ControlItem</code> <p><code>GOAL_PWM</code> \u306e\u7d76\u5bfe\u5024\u306f\u3053\u306e\u5024\u4ee5\u4e0b\u306b\u5236\u9650\u3055\u308c\u308b.</p> <p><code>Duty [%] = Value * 100 [%] / 855</code></p> <code>CURRENT_LIMIT</code> <code>ControlItem</code> <p><code>GOAL_CURRENT</code> \u306e\u7d76\u5bfe\u5024\u306f\u3053\u306e\u5024\u4ee5\u4e0b\u306b\u5236\u9650\u3055\u308c\u308b.</p> <p><code>Current [mA] = Value * CurrentScalingFactor [mA]</code></p> <code>ACCELERATION_LIMIT</code> <code>ControlItem</code> <p><code>PROFILE_ACCELERATION</code> \u306e\u7d76\u5bfe\u5024\u306f\u3053\u306e\u5024\u4ee5\u4e0b\u306b\u5236\u9650\u3055\u308c\u308b.</p> <p><code>Acceleration [rpm\u00b2] = Value * 214.577</code></p> <code>VELOCITY_LIMIT</code> <code>ControlItem</code> <p><code>GOAL_VELOCITY</code> \u306e\u7d76\u5bfe\u5024\u3068 <code>PROFILE_VELOCITY</code> \u306f\u3053\u306e\u5024\u4ee5\u4e0b\u306b\u5236\u9650\u3055\u308c\u308b.</p> <p><code>Velocity [rpm] = Value * 0.229 [rpm]</code></p> <code>MAX_POSITION_LIMIT</code> <code>ControlItem</code> <p><code>OPERATING_MODE</code> \u306b <code>POSITION_CONTROL_MODE</code>\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u6642\u306b <code>GOAL_POSITION</code> \u306f\u3053\u306e\u5024\u306e\u7bc4\u56f2\u5185\u306b\u5236\u9650\u3055\u308c\u308b.</p> <p><code>Position [deg] = Value * 360 [deg] / 4096</code></p> <code>MIN_POSITION_LIMIT</code> <code>ControlItem</code> <p><code>OPERATING_MODE</code> \u306b <code>POSITION_CONTROL_MODE</code>\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u6642\u306b <code>GOAL_POSITION</code> \u306f\u3053\u306e\u5024\u306e\u7bc4\u56f2\u5185\u306b\u5236\u9650\u3055\u308c\u308b.</p> <code>SHUTDOWN</code> <code>ControlItem</code> <p>\u3053\u306e\u8a2d\u5b9a\u3068 <code>HARDWARE_ERROR_STATUS</code> \u306e\u8ad6\u7406\u7a4d\u304c0\u4ee5\u5916\u306b\u306a\u308b\u3068, <code>TORQUE_ENABLE</code> \u306f0\u306b\u306a\u308a\u30e2\u30fc\u30bf\u306e\u51fa\u529b\u304c\u906e\u65ad\u3055\u308b. \u4ee5\u5f8c <code>TORQUE_ENABLE</code> \u30921\u306b\u3059\u308b\u4e8b\u306f\u3067\u304d\u306a\u3044.</p> <ul> <li><code>0</code>: Input Voltage Error</li> <li><code>2</code>: Overheating Error</li> <li><code>3</code>: Motor Encoder Error</li> <li><code>4</code>: Electrical Shock Error</li> <li><code>5</code>: Overload Error</li> </ul> <p>\u306a\u304a, \u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3\u72b6\u614b\u304b\u3089\u5fa9\u5e30\u3059\u308b\u306b\u306f\u767a\u751f\u3057\u3066\u3044\u308b\u969c\u5bb3\u3092\u6392\u9664\u3057\u305f\u5f8c, \u96fb\u6e90\u306e\u518d\u6295\u5165\u304b, REBOOT\u30a4\u30f3\u30b9\u30c8\u30e9\u30af\u30b7\u30e7\u30f3\u30d1\u30b1\u30c3\u30c8\u3092\u53d7\u4fe1\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b.</p> <code>TORQUE_ENABLE</code> <code>ControlItem</code> <p>\u51fa\u529b\u8ef8\u3092\u30d5\u30ea\u30fc\u306b\u3059\u308b\u304b <code>OPERATION_MODE</code> \u306b\u5f93\u3063\u305f\u5236\u5fa1\u3092\u958b\u59cb\u3059\u308b.</p> <ul> <li><code>0</code>: \u51fa\u529b\u8ef8\u30d5\u30ea\u30fc\u30fb\u5236\u5fa1\u505c\u6b62\u30fb\u30ed\u30c3\u30af\u3055\u308c\u305f\u30a2\u30a4\u30c6\u30e0\u3092\u89e3\u9664</li> <li><code>1</code>: <code>OPERATION_MODE</code>\u306b\u5f93\u3063\u305f\u5236\u5fa1\u958b\u59cb, NVM\u306e\u30a2\u30a4\u30c6\u30e0\u30ed\u30c3\u30af</li> </ul> <code>LED</code> <code>ControlItem</code> <p>\u672c\u4f53\u306b\u88c5\u5099\u3055\u308c\u305fLED\u3092\u70b9\u706f/\u6d88\u706f\u3059\u308b.</p> <ul> <li><code>0</code>: \u6d88\u706f</li> <li><code>1</code>: \u70b9\u706f</li> </ul> <code>HARDWARE_ERROR_STATUS</code> <code>ControlItem</code> <p>\u69d8\u3005\u306a\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3068\u5185\u90e8\u306e\u5236\u5fa1\u72b6\u614b\u3092\u6bd4\u8f03\u3057\u305f\u7d50\u679c\u3092\u793a\u3059. <code>SHUTDOWN</code>\u3068\u540c\u3058\u51fa\u529b.</p> <code>VELOCITY_I_GAIN</code> <code>ControlItem</code> <p>\u901f\u5ea6\u5236\u5fa1\u6f14\u7b97\u306b\u304a\u3051\u308bI\u30b2\u30a4\u30f3. <code>OPERATION_MODE</code> \u306b <code>VELOCITY_CONTROL_MODE</code> \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u6642\u306b\u6709\u52b9.</p> <p><code>KvI = (Velocity I Gain) / 65536</code></p> <code>VELOCITY_P_GAIN</code> <code>ControlItem</code> <p>\u901f\u5ea6\u5236\u5fa1\u6f14\u7b97\u306b\u304a\u3051\u308bP\u30b2\u30a4\u30f3. <code>OPERATION_MODE</code> \u306b <code>VELOCITY_CONTROL_MODE</code> \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u6642\u306b\u6709\u52b9.</p> <p><code>KvP = (Velocity P Gain) / 128</code></p> <code>POSITION_D_GAIN</code> <code>ControlItem</code> <p>\u4f4d\u7f6e\u5236\u5fa1\u6f14\u7b97\u306b\u304a\u3051\u308bD\u30b2\u30a4\u30f3. <code>OPERATION_MODE</code> \u306b <code>*POTION_CONTROL_MODE</code> \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3068\u304d\u306b\u6709\u52b9.</p> <p><code>KpD = (Position I Gain) / 16</code></p> <code>POSITION_I_GAIN</code> <code>ControlItem</code> <p>\u4f4d\u7f6e\u5236\u5fa1\u6f14\u7b97\u306b\u304a\u3051\u308bI\u30b2\u30a4\u30f3. <code>OPERATION_MODE</code> \u306b <code>POSITION_CONTROL_MODE</code> \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u6642\u306b\u6709\u52b9.</p> <p><code>KpI = (Position I Gain) / 65536</code></p> <code>POSITION_P_GAIN</code> <code>ControlItem</code> <p>\u4f4d\u7f6e\u5236\u5fa1\u6f14\u7b97\u306b\u304a\u3051\u308bP\u30b2\u30a4\u30f3. <code>OPERATION_MODE</code> \u306b <code>POSITION_CONTROL_MODE</code> \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u6642\u306b\u6709\u52b9.</p> <p><code>KpP = (Position P Gain) / 128</code></p> <code>FEEDFORWARD_ACCELERATION_GAIN</code> <code>ControlItem</code> <p>\u4f4d\u7f6e\u5236\u5fa1\u6f14\u7b97\u306b\u304a\u3051\u308b\u52a0\u901f\u5ea6\u30d5\u30a3\u30fc\u30c9\u30d5\u30a9\u30ef\u30fc\u30c9\u30b2\u30a4\u30f3. OPERATION_MODE<code>\u306b</code>POSITION_CONTROL_MODE` \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u6642\u306b\u6709\u52b9.</p> <code>FEEDFORWARD_VELOCITY_GAIN</code> <code>ControlItem</code> <p>\u4f4d\u7f6e\u5236\u5fa1\u6f14\u7b97\u306b\u304a\u3051\u308b\u901f\u5ea6\u30d5\u30a3\u30fc\u30c9\u30d5\u30a9\u30ef\u30fc\u30c9\u30b2\u30a4\u30f3. <code>OPERATION_MODE</code> \u306b <code>POSITION_CONTROL_MODE</code> \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u6642\u306b\u6709\u52b9.</p> <code>GOAL_PWM</code> <code>ControlItem</code> <p>PWM\u306e\u30c7\u30e5\u30fc\u30c6\u30a3\u30fc\u6bd4. \u5168\u3066\u306e <code>OPERATION_MODE</code>\u306b\u304a\u3044\u3066, \u5236\u5fa1\u306e\u6700\u7d42\u6bb5\u306b\u3053\u306e\u5024\u4ee5\u4e0b\u306b\u30c7\u30e5\u30fc\u30c6\u30a3\u30fc\u6bd4\u304c\u5236\u9650\u3055\u308c\u30e2\u30fc\u30bf\u3078\u5370\u52a0\u3055\u308c\u308b.</p> <p><code>Duty [%] = Value * 100 [%] / 855</code></p> <code>GOAL_CURRENT</code> <code>ControlItem</code> <p>\u96fb\u6d41\u5236\u5fa1\u6f14\u7b97\u306b\u304a\u3051\u308b\u76ee\u6a19\u96fb\u6d41\u3092\u6307\u5b9a\u3059\u308b. <code>OPERATION_MODE</code> \u306b <code>CURRENT_*_MODE</code> \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u6642\u306b\u6709\u52b9.</p> <p><code>Current [mA] = Value * ScalingFactor [mA]</code></p> <code>GOAL_VELOCITY</code> <code>ControlItem</code> <p>\u901f\u5ea6\u5236\u5fa1\u306e\u76ee\u6a19\u5024. <code>OPERATION_MODE</code> \u306b <code>VELOCITY_CONTROL_MODE</code> \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u6642\u306b\u6709\u52b9.</p> <p><code>Velocity [rpm] = Value * 0.229 [rpm]</code></p> <code>PROFILE_ACCELERATION</code> <code>ControlItem</code> <p>Profile\u306e\u52a0\u901f\u5ea6\u3082\u3057\u304f\u306f\u52a0\u901f\u6642\u9593. <code>OPERATION_MODE</code> \u304c <code>CURRENT_CONTROL_MODE</code> \u4ee5\u5916\u306e\u3068\u304d\u306b\u6709\u52b9.</p> <p><code>Acceleration [rpm\u00b2] = Value * 214.577</code></p> <code>PROFILE_VELOCITY</code> <code>ControlItem</code> <p>Profile\u306e\u901f\u5ea6. Drive Mode\u306eProfile Configuration\u304c0\u306e\u6642\u306bProfile\u306e\u6700\u5927\u901f\u5ea6\u3092\u6307\u5b9a\u3059\u308b. <code>CURRENT_CONTROL_MODE</code> / <code>VELOCITY_CONTROL_MODE</code> \u4ee5\u5916\u306e\u3068\u304d\u6709\u52b9.</p> <code>GOAL_POSITION</code> <code>ControlItem</code> <p>\u4f4d\u7f6e\u5236\u5fa1\u306e\u76ee\u6a19\u5024. <code>OPERATING_MODE</code> \u304c <code>*_POSITION_CONTROL_MODE</code> \u306e\u3068\u304d\u6709\u52b9. \u5404Mode\u6bce\u306b\u6307\u6458\u3067\u304d\u308b\u6570\u5024\u7bc4\u56f2\u304c\u7570\u306a\u308b.</p> <code>REALTIME_TICK</code> <code>ControlItem</code> <p>15\u30d3\u30c3\u30c8\u306e\u30d5\u30ea\u30fc\u30e9\u30f3\u30ab\u30a6\u30f3\u30bf. 1ms\u5468\u671f\u6bce\u306b\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3055\u308c\u308b.</p> <code>MOVING_STATUS</code> <code>ControlItem</code> <p>\u52d5\u4f5c\u4e2d\u306e\u72b6\u6cc1\u3092\u793a\u3059.</p> <ul> <li><code>0</code>: In-Position, \u4f4d\u7f6e\u5236\u5fa1\u6642, \u76ee\u6a19\u4f4d\u7f6e\u5230\u9054</li> <li><code>1</code>: Profile Ongoing, Goal Position\u306b\u57fa\u3065\u304fProfile\u9032\u884c\u4e2d</li> <li><code>3</code>: Following Error, \u4f4d\u7f6e\u5236\u5fa1\u6642, \u4f4d\u7f6e\u304cProfile\u306b\u975e\u8ffd\u5f93</li> </ul> <code>PRESENT_PWM</code> <code>ControlItem</code> <p>\u5236\u5fa1\u4e2d\u306ePWM\u51fa\u529b\u5024.</p> <p><code>Duty [%] = Value * 100 [%] / 855</code></p> <code>PRESENT_CURRENT</code> <code>ControlItem</code> <p>\u73fe\u5728\u30e2\u30fc\u30bf\u3078\u6d41\u308c\u3066\u3044\u308b\u96fb\u6d41.</p> <p><code>Current [mA] = Value * ScalingFactor [mA]</code></p> <code>PRESENT_VELOCITY</code> <code>ControlItem</code> <p>\u73fe\u5728\u306e\u51fa\u529b\u8ef8\u306e\u56de\u8ee2\u6570.</p> <p><code>Velocity [rpm] = Value * 0.229 [rpm]</code></p> <code>PRESENT_POSITION</code> <code>ControlItem</code> <p>\u771f\u306e\u4f4d\u7f6e\u304b\u3089 <code>HOMING_OFFSET</code> \u3092\u9664\u3057\u305f\u51fa\u529b\u8ef8\u306e\u4f4d\u7f6e.</p> <p><code>Position [deg] = Value * 360 [deg] / 4096</code></p> <code>VELOCITY_TRAJECTORY</code> <code>ControlItem</code> <p>Profile\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u76ee\u6a19\u901f\u5ea6. <code>OPERATING_MODE</code> \u306b <code>VELOCITY_CONTROL_MODE</code>\u30fb<code>*_POSITION_CONTROL_MODE</code> \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u6642\u306b\u6709\u52b9.</p> <code>POSITION_TRAJECTORY</code> <code>ControlItem</code> <p>Profile\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u76ee\u6a19\u4f4d\u7f6e. <code>OPERATING_MODE</code> \u306b <code>*_POSITION_CONTROL_MODE</code> \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u6642\u306b\u6709\u52b9.</p> <code>PRESENT_INPUT_VOLTAGE</code> <code>ControlItem</code> <p>\u73fe\u5728\u306e\u5370\u52a0\u96fb\u5727.</p> <p><code>Voltage [V] = Value * 0.1 [V]</code></p> <code>PRESENT_TEMPERATURE</code> <code>ControlItem</code> <p>\u73fe\u5728\u306e\u5185\u90e8\u6e29\u5ea6.</p> <p><code>Temperature [degC] = Value * 1 [degC]</code></p> Source code in <code>src/robopy/control_table.py</code> <pre><code>class ControlTable(Enum):\n    \"\"\"\n    Dynamixel\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30c6\u30fc\u30d6\u30eb.\n\n    Attributes\n    ----------\n    MODEL_NUMBER : ControlItem\n        Dynamixel \u306e\u30e2\u30c7\u30eb\u756a\u53f7.\n        \u30e2\u30c7\u30eb\u56fa\u6709\u306e\u5024\u3092\u4fdd\u6301\u3059\u308b.\n        \u7570\u306a\u308b\u7a2e\u985e\u306e Dynamixel \u3092\u6df7\u5728\u3057\u3066\u4f7f\u7528\u3059\u308b\u969b\u306e\u500b\u4f53\u8b58\u5225\u306a\u3069\u306b\u4f7f\u7528\u3067\u304d\u308b.\n    MODEL_INFORMATION : ControlItem\n        Dynamixel\u306e\u30e2\u30c7\u30eb\u60c5\u5831.\n        \u7570\u306a\u308b\u7a2e\u985e\u306e Dynamixel \u3092\u6df7\u5728\u3057\u3066\u4f7f\u7528\u3059\u308b\u969b\u306e\u500b\u4f53\u8b58\u5225\u306a\u3069\u306b\u4f7f\u7528\u3067\u304d\u308b.\n    VERSION_OF_FIRMWARE : ControlItem\n        \u5185\u8535\u3055\u308c\u308b CPU \u306b\u66f8\u304d\u8fbc\u307e\u308c\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30d0\u30fc\u30b8\u30e7\u30f3.\n        \u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u306e\u66f4\u65b0\u3092\u884c\u3063\u305f\u969b\u306b\u5408\u308f\u305b\u3066\u81ea\u52d5\u7684\u306b\u5909\u66f4\u3055\u308c\u308b.\n    ID : ControlItem\n        \u5404 Dynamixel \u3092\u7279\u5b9a\u3059\u308b\u305f\u3081\u306e\u56fa\u6709\u306e\u5024\u30670~252\u306e\u7bc4\u56f2\u306e\u6570\u5024\u3067\u8a2d\u5b9a\u3059\u308b.\n        \u540c\u4e00\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5185\u306b\u5b58\u5728\u3059\u308b Dynamixel \u306b\u306f\u5404\u3005\u7570\u306a\u308bID\u304c\u8981\u6c42\u3055\u308c\u308b.\n    BAUDRATE : ControlItem\n        \u901a\u4fe1\u3059\u308b\u969b\u306e\u30dc\u30fc\u30ec\u30fc\u30c8.\n        \u30db\u30b9\u30c8\u3068Dynamixel\u306e\u30dc\u30fc\u30ec\u30fc\u30c8\u306f\u4e00\u81f4\u3055\u305b\u308b\u5fc5\u8981\u304c\u3042\u308b.\n        \u8a73\u3057\u304f\u306f `::: Baudrate` \u3092\u53c2\u7167.\n    RETURN_DELAY_TIME : ControlItem\n        \u30d1\u30b1\u30c3\u30c8\u304c\u9001\u3089\u308c\u305f\u5f8c, \u30b9\u30c6\u30fc\u30bf\u30b9\u30d1\u30b1\u30c3\u30c8\u3092\u8fd4\u3059\u307e\u3067\u306e\u5f85\u3061\u6642\u9593.\n        0\u3092\u8a2d\u5b9a\u3057\u3066\u3082\u554f\u984c\u306a\u3044.\n\n        `Delay Time [us] = Value * 2 [us]`\n    DRIVE_MODE : ControlItem\n        \u30c7\u30d5\u30a9\u30eb\u30c8\u56de\u8ee2\u65b9\u5411\u30fb\u30c7\u30e5\u30a2\u30eb\u30b8\u30e7\u30a4\u30f3\u30c8\u30fb\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u69cb\u6210\u3092\u8a2d\u5b9a\u3059\u308b.\n        \u30c7\u30d5\u30a9\u30eb\u30c8\u56de\u8ee2\u65b9\u5411\u306b\u3088\u308a\u306fPosition\u30fbVelocity\u30fbPWM\u306e\u5404\u6307\u4ee4\u306b\u3088\u308b\u30db\u30fc\u30f3\u306e\u56de\u8ee2\u65b9\u5411\u304c\u5909\u5316\u3059\u308b.\n\n        - `0`: Direction of rotation (0:Normal, 1:Reverse)\n        - `1`: Profile configuration (0:Master, 1:Slaver, X540\u30b7\u30ea\u30fc\u30ba\u306e\u307f)\n        - `2`: Dual Joint (0:Velocity-based Profile, 1:Time-based Profile)\n    OPERATING_MODE : ControlItem\n        \u52d5\u4f5c\u30e2\u30fc\u30c9. \u8a73\u3057\u304f\u306f `::: OperatingMode` \u3092\u53c2\u7167.\n    SECONDARY_ID : ControlItem\n        Dynamixel\u306eSecondary ID.\n        Secondary ID \u306f, ID \u3068\u540c\u69d8\u306b\u5404 Dynamixel \u3092\u8b58\u5225\u3059\u308b\u305f\u3081\u306b\u7528\u3044\u3089\u308c\u308b.\n        \u306a\u304a, Secondary ID\u306b253\u4ee5\u4e0a\u306e\u5024\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u6a5f\u80fd\u3057\u306a\u3044.\n    PROTOCOL_VERSION : ControlItem\n        \u901a\u4fe1\u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u30d0\u30fc\u30b8\u30e7\u30f3.\n        \u7570\u306a\u308b\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u6df7\u5728\u3055\u305b\u3066\u4f7f\u7528\u3059\u308b\u4e8b\u306f\u3067\u304d\u306a\u3044.\n        \u57fa\u672c\u7684\u306b\u306f1\u304b2\u3092\u9078\u629e\u3059\u308b.\n    HOMING_OFFSET : ControlItem\n        \u3053\u306e\u5024\u304c\u771f\u306e\u73fe\u5728\u4f4d\u7f6e\u306b\u52a0\u7b97\u3055\u308c `PRESENT_POSITION` \u306b\u53cd\u6620\u3055\u308c\u308b.\n        \u30aa\u30d5\u30bb\u30c3\u30c8\u4f4d\u7f6e\u3092\u30db\u30b9\u30c8\u5074\u3067\u306f\u7121\u304f Dynamixel \u5074\u306b\u6301\u305f\u305b\u308b\u969b\u306b\u4f7f\u7528\u3059\u308b.\n        \u771f\u306e\u73fe\u5728\u4f4d\u7f6e\u3068\u306f, Multi Turn \u304c off\u30fbHoming Offset \u304c 0\u30fb\n        Direction of rotation \u304c0\u306e\u6642\u306e`PRESENT_POSITION` \u3092\u610f\u5473\u3059\u308b.\n\n        `Position [deg] = Value * 360 [deg] / 4095`\n    MOVING_THRESHOLD : ControlItem\n        `PRESENT_VELOCITY` \u306e\u7d76\u5bfe\u5024\u3068\u6bd4\u8f03\u3057\u305f\u7d50\u679c\u304c `MOVING` \u306b\u793a\u3055\u308c\u308b.\n\n        `Velocity [rpm] = Value * 0.229 [rpm]`\n    TEMPERATURE_LIMIT : ControlItem\n        `PRESENT_TEMPERATURE` \u304c\u3053\u306e\u5024\u3092\u8d85\u3048\u308b\u3068\n        `HARDWARE_ERROR_STATUS` \u306e\u8a72\u5f53\u30d3\u30c3\u30c8\u304cON\u306b\u306a\u308a,\n        `SHUTDOWN` \u3067\u6307\u5b9a\u3055\u308c\u305f\u52d5\u4f5c\u306b\u9077\u79fb\u3059\u308b.\n    MAX_VOLTAGE_LIMIT : ControlItem\n        `PRESENT_INPUT_VOLTAGE` \u304c\u3053\u306e\u5024\u3092\u8d85\u3048\u308b\u3068\n        `HARDWARE_ERROR_STATUS` \u306e\u8a72\u5f53\u30d3\u30c3\u30c8\u304cON\u306b\u306a\u308a,\n        `SHUTDOWN` \u3067\u6307\u5b9a\u3055\u308c\u305f\u52d5\u4f5c\u306b\u9077\u79fb\u3059\u308b.\n\n        `Voltage [V] = Value * 0.1 [V]`\n    MIN_VOLTAGE_LIMIT : ControlItem\n        `PRESENT_INPUT_VOLTAGE` \u304c\u3053\u306e\u5024\u3092\u4e0b\u56de\u308b\u3068\n        `HARDWARE_ERROR_STATUS` \u306e\u8a72\u5f53\u30d3\u30c3\u30c8\u304cON\u306b\u306a\u308a,\n        `SHUTDOWN` \u3067\u6307\u5b9a\u3055\u308c\u305f\u52d5\u4f5c\u306b\u9077\u79fb\u3059\u308b.\n    PWM_LIMIT : ControlItem\n        `GOAL_PWM` \u306e\u7d76\u5bfe\u5024\u306f\u3053\u306e\u5024\u4ee5\u4e0b\u306b\u5236\u9650\u3055\u308c\u308b.\n\n        `Duty [%] = Value * 100 [%] / 855`\n    CURRENT_LIMIT : ControlItem\n        `GOAL_CURRENT` \u306e\u7d76\u5bfe\u5024\u306f\u3053\u306e\u5024\u4ee5\u4e0b\u306b\u5236\u9650\u3055\u308c\u308b.\n\n        `Current [mA] = Value * CurrentScalingFactor [mA]`\n    ACCELERATION_LIMIT : ControlItem\n        `PROFILE_ACCELERATION` \u306e\u7d76\u5bfe\u5024\u306f\u3053\u306e\u5024\u4ee5\u4e0b\u306b\u5236\u9650\u3055\u308c\u308b.\n\n        `Acceleration [rpm\u00b2] = Value * 214.577`\n    VELOCITY_LIMIT : ControlItem\n        `GOAL_VELOCITY` \u306e\u7d76\u5bfe\u5024\u3068 `PROFILE_VELOCITY` \u306f\u3053\u306e\u5024\u4ee5\u4e0b\u306b\u5236\u9650\u3055\u308c\u308b.\n\n        `Velocity [rpm] = Value * 0.229 [rpm]`\n    MAX_POSITION_LIMIT : ControlItem\n        `OPERATING_MODE` \u306b `POSITION_CONTROL_MODE`\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u6642\u306b\n        `GOAL_POSITION` \u306f\u3053\u306e\u5024\u306e\u7bc4\u56f2\u5185\u306b\u5236\u9650\u3055\u308c\u308b.\n\n        `Position [deg] = Value * 360 [deg] / 4096`\n    MIN_POSITION_LIMIT : ControlItem\n        `OPERATING_MODE` \u306b `POSITION_CONTROL_MODE`\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u6642\u306b\n        `GOAL_POSITION` \u306f\u3053\u306e\u5024\u306e\u7bc4\u56f2\u5185\u306b\u5236\u9650\u3055\u308c\u308b.\n    SHUTDOWN : ControlItem\n        \u3053\u306e\u8a2d\u5b9a\u3068 `HARDWARE_ERROR_STATUS` \u306e\u8ad6\u7406\u7a4d\u304c0\u4ee5\u5916\u306b\u306a\u308b\u3068,\n        `TORQUE_ENABLE` \u306f0\u306b\u306a\u308a\u30e2\u30fc\u30bf\u306e\u51fa\u529b\u304c\u906e\u65ad\u3055\u308b.\n        \u4ee5\u5f8c `TORQUE_ENABLE` \u30921\u306b\u3059\u308b\u4e8b\u306f\u3067\u304d\u306a\u3044.\n\n        - `0`: Input Voltage Error\n        - `2`: Overheating Error\n        - `3`: Motor Encoder Error\n        - `4`: Electrical Shock Error\n        - `5`: Overload Error\n\n        \u306a\u304a, \u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3\u72b6\u614b\u304b\u3089\u5fa9\u5e30\u3059\u308b\u306b\u306f\u767a\u751f\u3057\u3066\u3044\u308b\u969c\u5bb3\u3092\u6392\u9664\u3057\u305f\u5f8c,\n        \u96fb\u6e90\u306e\u518d\u6295\u5165\u304b, REBOOT\u30a4\u30f3\u30b9\u30c8\u30e9\u30af\u30b7\u30e7\u30f3\u30d1\u30b1\u30c3\u30c8\u3092\u53d7\u4fe1\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b.\n    TORQUE_ENABLE : ControlItem\n        \u51fa\u529b\u8ef8\u3092\u30d5\u30ea\u30fc\u306b\u3059\u308b\u304b `OPERATION_MODE` \u306b\u5f93\u3063\u305f\u5236\u5fa1\u3092\u958b\u59cb\u3059\u308b.\n\n        - `0`: \u51fa\u529b\u8ef8\u30d5\u30ea\u30fc\u30fb\u5236\u5fa1\u505c\u6b62\u30fb\u30ed\u30c3\u30af\u3055\u308c\u305f\u30a2\u30a4\u30c6\u30e0\u3092\u89e3\u9664\n        - `1`: `OPERATION_MODE`\u306b\u5f93\u3063\u305f\u5236\u5fa1\u958b\u59cb, NVM\u306e\u30a2\u30a4\u30c6\u30e0\u30ed\u30c3\u30af\n    LED : ControlItem\n        \u672c\u4f53\u306b\u88c5\u5099\u3055\u308c\u305fLED\u3092\u70b9\u706f/\u6d88\u706f\u3059\u308b.\n\n        - `0`: \u6d88\u706f\n        - `1`: \u70b9\u706f\n    HARDWARE_ERROR_STATUS : ControlItem\n        \u69d8\u3005\u306a\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3068\u5185\u90e8\u306e\u5236\u5fa1\u72b6\u614b\u3092\u6bd4\u8f03\u3057\u305f\u7d50\u679c\u3092\u793a\u3059.\n        `SHUTDOWN`\u3068\u540c\u3058\u51fa\u529b.\n    VELOCITY_I_GAIN : ControlItem\n        \u901f\u5ea6\u5236\u5fa1\u6f14\u7b97\u306b\u304a\u3051\u308bI\u30b2\u30a4\u30f3.\n        `OPERATION_MODE` \u306b `VELOCITY_CONTROL_MODE` \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u6642\u306b\u6709\u52b9.\n\n        `KvI = (Velocity I Gain) / 65536`\n    VELOCITY_P_GAIN : ControlItem\n        \u901f\u5ea6\u5236\u5fa1\u6f14\u7b97\u306b\u304a\u3051\u308bP\u30b2\u30a4\u30f3.\n        `OPERATION_MODE` \u306b `VELOCITY_CONTROL_MODE` \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u6642\u306b\u6709\u52b9.\n\n        `KvP = (Velocity P Gain) / 128`\n    POSITION_D_GAIN : ControlItem\n        \u4f4d\u7f6e\u5236\u5fa1\u6f14\u7b97\u306b\u304a\u3051\u308bD\u30b2\u30a4\u30f3.\n        `OPERATION_MODE` \u306b `*POTION_CONTROL_MODE` \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3068\u304d\u306b\u6709\u52b9.\n\n        `KpD = (Position I Gain) / 16`\n    POSITION_I_GAIN : ControlItem\n        \u4f4d\u7f6e\u5236\u5fa1\u6f14\u7b97\u306b\u304a\u3051\u308bI\u30b2\u30a4\u30f3.\n        `OPERATION_MODE` \u306b `POSITION_CONTROL_MODE` \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u6642\u306b\u6709\u52b9.\n\n        `KpI = (Position I Gain) / 65536`\n    POSITION_P_GAIN : ControlItem\n        \u4f4d\u7f6e\u5236\u5fa1\u6f14\u7b97\u306b\u304a\u3051\u308bP\u30b2\u30a4\u30f3.\n        `OPERATION_MODE` \u306b `POSITION_CONTROL_MODE` \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u6642\u306b\u6709\u52b9.\n\n        `KpP = (Position P Gain) / 128`\n    FEEDFORWARD_ACCELERATION_GAIN : ControlItem\n        \u4f4d\u7f6e\u5236\u5fa1\u6f14\u7b97\u306b\u304a\u3051\u308b\u52a0\u901f\u5ea6\u30d5\u30a3\u30fc\u30c9\u30d5\u30a9\u30ef\u30fc\u30c9\u30b2\u30a4\u30f3.\n        OPERATION_MODE` \u306b `POSITION_CONTROL_MODE` \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u6642\u306b\u6709\u52b9.\n    FEEDFORWARD_VELOCITY_GAIN : ControlItem\n        \u4f4d\u7f6e\u5236\u5fa1\u6f14\u7b97\u306b\u304a\u3051\u308b\u901f\u5ea6\u30d5\u30a3\u30fc\u30c9\u30d5\u30a9\u30ef\u30fc\u30c9\u30b2\u30a4\u30f3.\n        `OPERATION_MODE` \u306b `POSITION_CONTROL_MODE` \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u6642\u306b\u6709\u52b9.\n    GOAL_PWM : ControlItem\n        PWM\u306e\u30c7\u30e5\u30fc\u30c6\u30a3\u30fc\u6bd4.\n        \u5168\u3066\u306e `OPERATION_MODE`\u306b\u304a\u3044\u3066,\n        \u5236\u5fa1\u306e\u6700\u7d42\u6bb5\u306b\u3053\u306e\u5024\u4ee5\u4e0b\u306b\u30c7\u30e5\u30fc\u30c6\u30a3\u30fc\u6bd4\u304c\u5236\u9650\u3055\u308c\u30e2\u30fc\u30bf\u3078\u5370\u52a0\u3055\u308c\u308b.\n\n        `Duty [%] = Value * 100 [%] / 855`\n    GOAL_CURRENT : ControlItem\n        \u96fb\u6d41\u5236\u5fa1\u6f14\u7b97\u306b\u304a\u3051\u308b\u76ee\u6a19\u96fb\u6d41\u3092\u6307\u5b9a\u3059\u308b.\n        `OPERATION_MODE` \u306b `CURRENT_*_MODE` \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u6642\u306b\u6709\u52b9.\n\n        `Current [mA] = Value * ScalingFactor [mA]`\n    GOAL_VELOCITY : ControlItem\n        \u901f\u5ea6\u5236\u5fa1\u306e\u76ee\u6a19\u5024.\n        `OPERATION_MODE` \u306b `VELOCITY_CONTROL_MODE` \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u6642\u306b\u6709\u52b9.\n\n        `Velocity [rpm] = Value * 0.229 [rpm]`\n    PROFILE_ACCELERATION : ControlItem\n        Profile\u306e\u52a0\u901f\u5ea6\u3082\u3057\u304f\u306f\u52a0\u901f\u6642\u9593.\n        `OPERATION_MODE` \u304c `CURRENT_CONTROL_MODE` \u4ee5\u5916\u306e\u3068\u304d\u306b\u6709\u52b9.\n\n        `Acceleration [rpm\u00b2] = Value * 214.577`\n    PROFILE_VELOCITY : ControlItem\n        Profile\u306e\u901f\u5ea6.\n        Drive Mode\u306eProfile Configuration\u304c0\u306e\u6642\u306bProfile\u306e\u6700\u5927\u901f\u5ea6\u3092\u6307\u5b9a\u3059\u308b.\n        `CURRENT_CONTROL_MODE` / `VELOCITY_CONTROL_MODE` \u4ee5\u5916\u306e\u3068\u304d\u6709\u52b9.\n    GOAL_POSITION : ControlItem\n        \u4f4d\u7f6e\u5236\u5fa1\u306e\u76ee\u6a19\u5024.\n        `OPERATING_MODE` \u304c `*_POSITION_CONTROL_MODE` \u306e\u3068\u304d\u6709\u52b9.\n        \u5404Mode\u6bce\u306b\u6307\u6458\u3067\u304d\u308b\u6570\u5024\u7bc4\u56f2\u304c\u7570\u306a\u308b.\n    REALTIME_TICK : ControlItem\n        15\u30d3\u30c3\u30c8\u306e\u30d5\u30ea\u30fc\u30e9\u30f3\u30ab\u30a6\u30f3\u30bf. 1ms\u5468\u671f\u6bce\u306b\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3055\u308c\u308b.\n    MOVING_STATUS : ControlItem\n        \u52d5\u4f5c\u4e2d\u306e\u72b6\u6cc1\u3092\u793a\u3059.\n\n        - `0`: In-Position, \u4f4d\u7f6e\u5236\u5fa1\u6642, \u76ee\u6a19\u4f4d\u7f6e\u5230\u9054\n        - `1`: Profile Ongoing, Goal Position\u306b\u57fa\u3065\u304fProfile\u9032\u884c\u4e2d\n        - `3`: Following Error, \u4f4d\u7f6e\u5236\u5fa1\u6642, \u4f4d\u7f6e\u304cProfile\u306b\u975e\u8ffd\u5f93\n    PRESENT_PWM : ControlItem\n        \u5236\u5fa1\u4e2d\u306ePWM\u51fa\u529b\u5024.\n\n        `Duty [%] = Value * 100 [%] / 855`\n    PRESENT_CURRENT : ControlItem\n        \u73fe\u5728\u30e2\u30fc\u30bf\u3078\u6d41\u308c\u3066\u3044\u308b\u96fb\u6d41.\n\n        `Current [mA] = Value * ScalingFactor [mA]`\n    PRESENT_VELOCITY : ControlItem\n        \u73fe\u5728\u306e\u51fa\u529b\u8ef8\u306e\u56de\u8ee2\u6570.\n\n        `Velocity [rpm] = Value * 0.229 [rpm]`\n    PRESENT_POSITION : ControlItem\n        \u771f\u306e\u4f4d\u7f6e\u304b\u3089 `HOMING_OFFSET` \u3092\u9664\u3057\u305f\u51fa\u529b\u8ef8\u306e\u4f4d\u7f6e.\n\n        `Position [deg] = Value * 360 [deg] / 4096`\n    VELOCITY_TRAJECTORY : ControlItem\n        Profile\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u76ee\u6a19\u901f\u5ea6.\n        `OPERATING_MODE` \u306b `VELOCITY_CONTROL_MODE`\u30fb`*_POSITION_CONTROL_MODE`\n        \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u6642\u306b\u6709\u52b9.\n    POSITION_TRAJECTORY : ControlItem\n        Profile\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u76ee\u6a19\u4f4d\u7f6e.\n        `OPERATING_MODE` \u306b `*_POSITION_CONTROL_MODE` \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u6642\u306b\u6709\u52b9.\n    PRESENT_INPUT_VOLTAGE : ControlItem\n        \u73fe\u5728\u306e\u5370\u52a0\u96fb\u5727.\n\n        `Voltage [V] = Value * 0.1 [V]`\n    PRESENT_TEMPERATURE : ControlItem\n        \u73fe\u5728\u306e\u5185\u90e8\u6e29\u5ea6.\n\n        `Temperature [degC] = Value * 1 [degC]`\n    \"\"\"\n\n    MODEL_NUMBER = ControlItem(0, 2, Dtype.UINT16, \"R\")\n    MODEL_INFORMATION = ControlItem(2, 4, Dtype.UINT32, \"R\")\n    VERSION_OF_FIRMWARE = ControlItem(6, 1, Dtype.UINT8, \"R\")\n    ID = ControlItem(7, 1, Dtype.UINT8, \"R/W(NVM)\")\n    BAUDRATE = ControlItem(8, 1, Dtype.UINT8, \"R/W(NVM)\")\n    RETURN_DELAY_TIME = ControlItem(9, 1, Dtype.UINT8, \"R/W(NVM)\")\n    DRIVE_MODE = ControlItem(10, 1, Dtype.UINT8, \"R/W(NVM)\")\n    OPERATING_MODE = ControlItem(11, 2, Dtype.UINT16, \"R/W(NVM)\")\n    SECONDARY_ID = ControlItem(12, 1, Dtype.UINT8, \"R/W(NVM)\")\n    PROTOCOL_VERSION = ControlItem(13, 1, Dtype.UINT8, \"R\")\n    HOMING_OFFSET = ControlItem(20, 4, Dtype.INT32, \"R/W(NVM)\")\n    MOVING_THRESHOLD = ControlItem(24, 4, Dtype.UINT32, \"R/W(NVM)\")\n    TEMPERATURE_LIMIT = ControlItem(31, 1, Dtype.UINT8, \"R/W(NVM)\")\n    MAX_VOLTAGE_LIMIT = ControlItem(32, 2, Dtype.UINT16, \"R/W(NVM)\")\n    MIN_VOLTAGE_LIMIT = ControlItem(34, 2, Dtype.UINT16, \"R/W(NVM)\")\n    CURRENT_LIMIT = ControlItem(38, 2, Dtype.UINT16, \"R/W(NVM)\")\n    PWM_LIMIT = ControlItem(40, 2, Dtype.UINT16, \"R/W(NVM)\")\n    ACCELERATION_LIMIT = ControlItem(44, 4, Dtype.UINT32, \"R/W(NVM)\")\n    VELOCITY_LIMIT = ControlItem(48, 4, Dtype.UINT32, \"R/W(NVM)\")\n    MAX_POSITION_LIMIT = ControlItem(52, 4, Dtype.INT32, \"R/W(NVM)\")\n    MIN_POSITION_LIMIT = ControlItem(56, 4, Dtype.INT32, \"R/W(NVM)\")\n    SHUTDOWN = ControlItem(63, 1, Dtype.UINT8, \"R/W\")\n    LED = ControlItem(65, 1, Dtype.UINT8, \"R/W\")\n    TORQUE_ENABLE = ControlItem(64, 1, Dtype.UINT8, \"R/W\")\n    HARDWARE_ERROR_STATUS = ControlItem(70, 1, Dtype.UINT8, \"R\")\n    VELOCITY_I_GAIN = ControlItem(76, 2, Dtype.UINT16, \"R/W\")\n    VELOCITY_P_GAIN = ControlItem(78, 2, Dtype.UINT16, \"R/W\")\n    POSITION_D_GAIN = ControlItem(80, 2, Dtype.UINT16, \"R/W\")\n    POSITION_I_GAIN = ControlItem(82, 2, Dtype.UINT16, \"R/W\")\n    POSITION_P_GAIN = ControlItem(84, 2, Dtype.UINT16, \"R/W\")\n    FEEDFORWARD_ACCELERATION_GAIN = ControlItem(88, 2, Dtype.UINT16, \"R/W\")\n    FEEDFORWARD_VELOCITY_GAIN = ControlItem(90, 2, Dtype.UINT16, \"R/W\")\n    GOAL_PWM = ControlItem(100, 2, Dtype.INT16, \"R/W\")\n    GOAL_CURRENT = ControlItem(102, 2, Dtype.INT16, \"R/W\")\n    GOAL_VELOCITY = ControlItem(104, 4, Dtype.INT32, \"R/W\")\n    PROFILE_ACCELERATION = ControlItem(108, 4, Dtype.UINT32, \"R/W\")\n    PROFILE_VELOCITY = ControlItem(112, 4, Dtype.UINT32, \"R/W\")\n    GOAL_POSITION = ControlItem(116, 4, Dtype.INT32, \"R/W\")\n    REALTIME_TICK = ControlItem(120, 2, Dtype.UINT16, \"R\")\n    MOVING_STATUS = ControlItem(122, 1, Dtype.UINT8, \"R\")\n    PRESENT_PWM = ControlItem(124, 2, Dtype.INT16, \"R\")\n    PRESENT_CURRENT = ControlItem(126, 2, Dtype.INT16, \"R\")\n    PRESENT_VELOCITY = ControlItem(128, 4, Dtype.INT32, \"R\")\n    PRESENT_POSITION = ControlItem(132, 4, Dtype.INT32, \"R\")\n    VELOCITY_TRAJECTORY = ControlItem(136, 4, Dtype.INT32, \"R\")\n    POSITION_TRAJECTORY = ControlItem(140, 4, Dtype.INT32, \"R\")\n    PRESENT_INPUT_VOLTAGE = ControlItem(144, 2, Dtype.UINT16, \"R\")\n    PRESENT_TEMPERATURE = ControlItem(146, 1, Dtype.UINT8, \"R\")\n\n    def __init__(self, control_item: ControlItem) -&gt; None:\n        self.address = control_item.address\n        self.num_bytes = control_item.num_bytes\n        self.dtype = control_item.dtype\n        self.access = control_item.access\n</code></pre>"},{"location":"api/control-table/#src.robopy.control_table.OperatingMode","title":"<code>OperatingMode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>\u52d5\u4f5c\u30e2\u30fc\u30c9.</p> <p>Attributes:</p> Name Type Description <code>CURRENT_CONTROL_MODE</code> <code>int</code> <p>\u96fb\u6d41\u5236\u5fa1. \u4f4d\u7f6e\u53ca\u3073\u901f\u5ea6\u5236\u5fa1\u306f\u884c\u308f\u306a\u3044.</p> <code>VELOCITY_CONTROL_MODE</code> <code>int</code> <p>\u901f\u5ea6\u5236\u5fa1. \u4f4d\u7f6e\u53ca\u3073\u30c8\u30eb\u30af\u5236\u5fa1\u306f\u884c\u308f\u306a\u3044.</p> <code>POSITION_CONTROL_MODE</code> <code>int</code> <p>\u4f4d\u7f6e\u5236\u5fa1.</p> <code>EXTENDED_POSITION_CONTROL_MODE</code> <code>int</code> <p>\u4f4d\u7f6e\u5236\u5fa1. GoalPosition\u306e\u7bc4\u56f2\u304c\u62e1\u5927.</p> <code>CURRENT_BASE_POSITION_CONTROL_MODE</code> <code>int</code> <p>\u96fb\u6d41\u5236\u9650\u4ed8\u304d\u4f4d\u7f6e\u5236\u5fa1.</p> <code>PWM_CONTROL_MODE</code> <code>int</code> <p>PWM\u306e\u30c7\u30e5\u30fc\u30c6\u30a3\u30fc\u6bd4\u3067\u5236\u5fa1.</p> Source code in <code>src/robopy/control_table.py</code> <pre><code>class OperatingMode(Enum):\n    \"\"\"\n    \u52d5\u4f5c\u30e2\u30fc\u30c9.\n\n    Attributes\n    ----------\n    CURRENT_CONTROL_MODE : int\n        \u96fb\u6d41\u5236\u5fa1. \u4f4d\u7f6e\u53ca\u3073\u901f\u5ea6\u5236\u5fa1\u306f\u884c\u308f\u306a\u3044.\n    VELOCITY_CONTROL_MODE : int\n        \u901f\u5ea6\u5236\u5fa1. \u4f4d\u7f6e\u53ca\u3073\u30c8\u30eb\u30af\u5236\u5fa1\u306f\u884c\u308f\u306a\u3044.\n    POSITION_CONTROL_MODE : int\n        \u4f4d\u7f6e\u5236\u5fa1.\n    EXTENDED_POSITION_CONTROL_MODE : int\n        \u4f4d\u7f6e\u5236\u5fa1. GoalPosition\u306e\u7bc4\u56f2\u304c\u62e1\u5927.\n    CURRENT_BASE_POSITION_CONTROL_MODE : int\n        \u96fb\u6d41\u5236\u9650\u4ed8\u304d\u4f4d\u7f6e\u5236\u5fa1.\n    PWM_CONTROL_MODE : int\n        PWM\u306e\u30c7\u30e5\u30fc\u30c6\u30a3\u30fc\u6bd4\u3067\u5236\u5fa1.\n\n    \"\"\"\n\n    CURRENT_CONTROL_MODE = 0\n    VELOCITY_CONTROL_MODE = 1\n    POSITION_CONTROL_MODE = 3\n    EXTENDED_POSITION_CONTROL_MODE = 4\n    CURRENT_BASE_POSITION_CONTROL_MODE = 5\n    PWM_CONTROL_MODE = 16\n</code></pre>"},{"location":"api/control-table/#src.robopy.control_table.Baudrate","title":"<code>Baudrate</code>","text":"<p>               Bases: <code>Enum</code></p> <p>\u901a\u4fe1\u3059\u308b\u969b\u306e\u30dc\u30fc\u30ec\u30fc\u30c8.</p> Notes <ul> <li>\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f <code>Baudrate.BPS_1M</code> \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u306f\u305a.</li> <li>\u30db\u30b9\u30c8\u306e\u30dc\u30fc\u30ec\u30fc\u30c8\u306fBPS\u5024\u3092\u76f4\u63a5\u6307\u5b9a\u3059\u308b\u306e\u3067\u6ce8\u610f.</li> <li>\u30db\u30b9\u30c8\u3068\u30dc\u30fc\u30ec\u30fc\u30c8\u304c\u5408\u308f\u306a\u3044\u3068\u901a\u4fe1\u3067\u304d\u306a\u3044\u306e\u3067\u6ce8\u610f.</li> </ul> <p>Attributes:</p> Name Type Description <code>BPS_9600</code> <code>int</code> <p>9600bps.</p> <code>BPS_57600</code> <code>int</code> <p>57600bps.</p> <code>BPS_115200</code> <code>int</code> <p>115200bps.</p> <code>BPS_1M</code> <code>int</code> <p>1Mbps.</p> <code>BPS_2M</code> <code>int</code> <p>2Mbps.</p> <code>BPS_3M</code> <code>int</code> <p>3Mbps.</p> <code>BPS_4M</code> <code>int</code> <p>4Mbps.</p> Source code in <code>src/robopy/control_table.py</code> <pre><code>class Baudrate(Enum):\n    \"\"\"\n    \u901a\u4fe1\u3059\u308b\u969b\u306e\u30dc\u30fc\u30ec\u30fc\u30c8.\n\n    Notes\n    -----\n    - \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f `Baudrate.BPS_1M` \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u306f\u305a.\n    - \u30db\u30b9\u30c8\u306e\u30dc\u30fc\u30ec\u30fc\u30c8\u306fBPS\u5024\u3092\u76f4\u63a5\u6307\u5b9a\u3059\u308b\u306e\u3067\u6ce8\u610f.\n    - \u30db\u30b9\u30c8\u3068\u30dc\u30fc\u30ec\u30fc\u30c8\u304c\u5408\u308f\u306a\u3044\u3068\u901a\u4fe1\u3067\u304d\u306a\u3044\u306e\u3067\u6ce8\u610f.\n\n    Attributes\n    ----------\n    BPS_9600 : int\n        9600bps.\n    BPS_57600 : int\n        57600bps.\n    BPS_115200 : int\n        115200bps.\n    BPS_1M : int\n        1Mbps.\n    BPS_2M : int\n        2Mbps.\n    BPS_3M : int\n        3Mbps.\n    BPS_4M : int\n        4Mbps.\n\n    \"\"\"\n\n    BPS_9600 = 1\n    BPS_57600 = 2\n    BPS_115200 = 3\n    BPS_1M = 4\n    BPS_2M = 5\n    BPS_3M = 6\n    BPS_4M = 7\n</code></pre>"},{"location":"api/control-table/#src.robopy.control_table.cast_value","title":"<code>cast_value(value, dtype)</code>","text":"<p>\u5024\u3092\u5404\u30c7\u30fc\u30bf\u578b\u306b\u5408\u308f\u305b\u305f\u5024\u306b\u3059\u308b.</p> <p>PRESENT_POSITION\u3084PRESENT_CURRENT\u306f\u5024\u306e\u7bc4\u56f2\u3092\u8d85\u3048\u305f\u5024\u3092 \u53d6\u5f97\u3057\u3066\u304d\u3066\u3057\u307e\u3046\u5834\u5408\u304c\u3042\u308b\u3089\u3057\u3044.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>float</code> <p>\u30ad\u30e3\u30b9\u30c8\u3059\u308b\u5024.</p> required <code>dtype</code> <code>Dtype</code> <p>\u30ad\u30e3\u30b9\u30c8\u3059\u308b\u30c7\u30fc\u30bf\u578b.</p> required <p>Returns:</p> Type Description <code>int</code> <p>\u30ad\u30e3\u30b9\u30c8\u5f8c\u306e\u5024.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; value = 2 ** 15 + 1\n&gt;&gt;&gt; cast_value(value, ControlTable.PRESENT_CURRENT.dtype)\n&gt;&gt;&gt; -32767\n</code></pre> Source code in <code>src/robopy/control_table.py</code> <pre><code>def cast_value(value: float, dtype: Dtype) -&gt; int:\n    \"\"\"\n    \u5024\u3092\u5404\u30c7\u30fc\u30bf\u578b\u306b\u5408\u308f\u305b\u305f\u5024\u306b\u3059\u308b.\n\n    PRESENT_POSITION\u3084PRESENT_CURRENT\u306f\u5024\u306e\u7bc4\u56f2\u3092\u8d85\u3048\u305f\u5024\u3092\n    \u53d6\u5f97\u3057\u3066\u304d\u3066\u3057\u307e\u3046\u5834\u5408\u304c\u3042\u308b\u3089\u3057\u3044.\n\n    Parameters\n    ----------\n    value : float\n        \u30ad\u30e3\u30b9\u30c8\u3059\u308b\u5024.\n    dtype : Dtype\n        \u30ad\u30e3\u30b9\u30c8\u3059\u308b\u30c7\u30fc\u30bf\u578b.\n\n    Returns\n    -------\n    int\n        \u30ad\u30e3\u30b9\u30c8\u5f8c\u306e\u5024.\n\n    Examples\n    --------\n    &gt;&gt;&gt; value = 2 ** 15 + 1\n    &gt;&gt;&gt; cast_value(value, ControlTable.PRESENT_CURRENT.dtype)\n    &gt;&gt;&gt; -32767\n\n    \"\"\"\n    if dtype == Dtype.UINT8:\n        value = int(value) &amp; 0xFF\n    if dtype == Dtype.UINT16:\n        value = int(value) &amp; 0xFFFF\n    if dtype == Dtype.UINT32:\n        value = int(value) &amp; 0xFFFFFFFF\n    if dtype == Dtype.INT16:\n        value = int(value) &amp; 0xFFFF\n        if value &gt;= 0x8000:\n            value -= 0x10000\n    if dtype == Dtype.INT32:\n        value = int(value) &amp; 0xFFFFFFFF\n        if value &gt;= 0x80000000:\n            value -= 0x100000000\n    return int(value)\n</code></pre>"},{"location":"api/dynamixel/","title":"dynamixel.py","text":"<p>Dynamixel \u30b5\u30fc\u30dc\u30e2\u30fc\u30bf\u306e\u5236\u5fa1.</p> References <ul> <li>AlexanderKoch-Koch/low_cost_robot</li> <li>wuphilipp/gello_software</li> </ul>"},{"location":"api/dynamixel/#src.robopy.dynamixel.DynamixelDriver","title":"<code>DynamixelDriver</code>","text":"<p>Dynamixel\u30921\u500b\u5358\u4f4d\u3067\u5236\u5fa1\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9.</p> <p>Parameters:</p> Name Type Description Default <code>servo_id</code> <code>int</code> <p>Dynamixel\u306eID.</p> required <code>port_handler</code> <code>PortHandler</code> <p>\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u306e\u305f\u3081\u306e\u30cf\u30f3\u30c9\u30e9.</p> required <code>packet_handler</code> <code>Protocol2PacketHandler</code> <p>\u30d1\u30b1\u30c3\u30c8\u306e\u305f\u3081\u306e\u30cf\u30f3\u30c9\u30e9.</p> required Source code in <code>src/robopy/dynamixel.py</code> <pre><code>class DynamixelDriver:\n    \"\"\"\n    Dynamixel\u30921\u500b\u5358\u4f4d\u3067\u5236\u5fa1\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9.\n\n    Parameters\n    ----------\n    servo_id : int\n        Dynamixel\u306eID.\n    port_handler : dynamixel_sdk.PortHandler\n        \u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u306e\u305f\u3081\u306e\u30cf\u30f3\u30c9\u30e9.\n    packet_handler : dynamixel_sdk.Protocol2PacketHandler\n        \u30d1\u30b1\u30c3\u30c8\u306e\u305f\u3081\u306e\u30cf\u30f3\u30c9\u30e9.\n    \"\"\"\n\n    def __init__(\n        self,\n        servo_id: int,\n        port_handler: dynamixel_sdk.PortHandler,\n        packet_handler: dynamixel_sdk.Protocol2PacketHandler,\n    ) -&gt; None:\n        self.servo_id = servo_id\n        self.port_handler = port_handler\n        self.packet_handler = packet_handler\n\n    def read(self, control_table: ControlTable) -&gt; int:\n        \"\"\"\n        Dynamixel\u304b\u3089\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u53d6\u308b.\n\n        \u30d1\u30b1\u30c3\u30c8\u30cf\u30f3\u30c9\u30e9\u304b\u3089\u53d6\u5f97\u3057\u305f\u5024\u3092 `cast_value` \u3067\u6709\u52b9\u306a\u5024\u306b\u52a0\u5de5\u3057\u3066\u8fd4\u3059.\n\n        Example\n        -------\n        ```python\n        from robopy import DynamixelDriver, ControlTable\n\n        dynamixel = DynamixelDriver(...)\n        while True:\n            value = dynamixel.read(ControlTable.PRESENT_POSITION)\n            print(f\"Current position: {value}\")\n        ```\n\n        Parameters\n        ----------\n        control_table : ControlTable\n            \u8aad\u307f\u53d6\u308b\u30c7\u30fc\u30bf\u306e `ControlTable`.\n\n        Returns\n        -------\n        int\n            \u53d6\u5f97\u3057\u305f\u5024. `ControlTable`\u306e\u5185\u5bb9\u306b\u5f93\u3063\u305f\u6574\u6570\u5024.\n\n        Raises\n        ------\n        DynamixelCommError\n            \u8aad\u307f\u8fbc\u307f\u306b\u5931\u6557\u3057\u305f\u5834\u5408.\n\n        \"\"\"\n        read_functions = {\n            1: self.packet_handler.read1ByteTxRx,\n            2: self.packet_handler.read2ByteTxRx,\n            4: self.packet_handler.read4ByteTxRx,\n        }\n        read_func = read_functions[control_table.num_bytes]\n\n        value, dxl_comm_result, dxl_error = read_func(\n            port=self.port_handler,\n            dxl_id=self.servo_id,\n            address=control_table.address,\n        )\n        if dxl_comm_result == dynamixel_sdk.COMM_SUCCESS:\n            return cast_value(value, dtype=control_table.dtype)\n\n        msg = f\"{self.servo_id=}\u306e{control_table}\u306e\u8aad\u307f\u53d6\u308a\u306b\u5931\u6557\u3057\u307e\u3057\u305f.\"\n        raise DynamixelCommError(msg, dxl_comm_result, dxl_error)\n\n    def write(self, control_table: ControlTable, value: int) -&gt; None:\n        \"\"\"\n        Dynamixel\u306b\u30c7\u30fc\u30bf\u3092\u66f8\u304d\u8fbc\u3080.\n\n        Example\n        -------\n        ```python\n        from robopy import DynamixelDriver, ControlTable\n\n        dynamixel = DynamixelDriver(...)\n        dynamixel.write(ControlTable.TORQUE_ENABLE, 1)\n        ```\n\n        Parameters\n        ----------\n        control_table : ControlTable\n            \u66f8\u304d\u8fbc\u3080\u30c7\u30fc\u30bf\u306e\u7a2e\u985e.\n        value : int\n            \u66f8\u304d\u8fbc\u3080\u5024.\n\n        Raises\n        ------\n        DynamixelCommError\n            \u901a\u4fe1\u306b\u5931\u6557\u3057\u305f\u5834\u5408.\n            read-only\u306e\u5834\u5408\u3084\u30c8\u30eb\u30af\u6709\u52b9\u6642\u306envm\u3078\u306e\u66f8\u304d\u8fbc\u307f\u3082\u542b\u3080.\n\n        \"\"\"\n        write_functions = {\n            1: self.packet_handler.write1ByteTxRx,\n            2: self.packet_handler.write2ByteTxRx,\n            4: self.packet_handler.write4ByteTxRx,\n        }\n        write_func = write_functions[control_table.num_bytes]\n        dxl_comm_result, dxl_error = write_func(\n            port=self.port_handler,\n            dxl_id=self.servo_id,\n            address=control_table.address,\n            data=value,\n        )\n        if dxl_comm_result == dynamixel_sdk.COMM_SUCCESS:\n            return\n\n        msg = f\"{self.servo_id=}\u306e{control_table}\u306e\u66f8\u304d\u8fbc\u307f\u306b\u5931\u6557\u3057\u307e\u3057\u305f.\"\n        raise DynamixelCommError(msg, dxl_comm_result, dxl_error)\n</code></pre>"},{"location":"api/dynamixel/#src.robopy.dynamixel.DynamixelDriver.read","title":"<code>read(control_table)</code>","text":"<p>Dynamixel\u304b\u3089\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u53d6\u308b.</p> <p>\u30d1\u30b1\u30c3\u30c8\u30cf\u30f3\u30c9\u30e9\u304b\u3089\u53d6\u5f97\u3057\u305f\u5024\u3092 <code>cast_value</code> \u3067\u6709\u52b9\u306a\u5024\u306b\u52a0\u5de5\u3057\u3066\u8fd4\u3059.</p> Example <pre><code>from robopy import DynamixelDriver, ControlTable\n\ndynamixel = DynamixelDriver(...)\nwhile True:\n    value = dynamixel.read(ControlTable.PRESENT_POSITION)\n    print(f\"Current position: {value}\")\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>control_table</code> <code>ControlTable</code> <p>\u8aad\u307f\u53d6\u308b\u30c7\u30fc\u30bf\u306e <code>ControlTable</code>.</p> required <p>Returns:</p> Type Description <code>int</code> <p>\u53d6\u5f97\u3057\u305f\u5024. <code>ControlTable</code>\u306e\u5185\u5bb9\u306b\u5f93\u3063\u305f\u6574\u6570\u5024.</p> <p>Raises:</p> Type Description <code>DynamixelCommError</code> <p>\u8aad\u307f\u8fbc\u307f\u306b\u5931\u6557\u3057\u305f\u5834\u5408.</p> Source code in <code>src/robopy/dynamixel.py</code> <pre><code>def read(self, control_table: ControlTable) -&gt; int:\n    \"\"\"\n    Dynamixel\u304b\u3089\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u53d6\u308b.\n\n    \u30d1\u30b1\u30c3\u30c8\u30cf\u30f3\u30c9\u30e9\u304b\u3089\u53d6\u5f97\u3057\u305f\u5024\u3092 `cast_value` \u3067\u6709\u52b9\u306a\u5024\u306b\u52a0\u5de5\u3057\u3066\u8fd4\u3059.\n\n    Example\n    -------\n    ```python\n    from robopy import DynamixelDriver, ControlTable\n\n    dynamixel = DynamixelDriver(...)\n    while True:\n        value = dynamixel.read(ControlTable.PRESENT_POSITION)\n        print(f\"Current position: {value}\")\n    ```\n\n    Parameters\n    ----------\n    control_table : ControlTable\n        \u8aad\u307f\u53d6\u308b\u30c7\u30fc\u30bf\u306e `ControlTable`.\n\n    Returns\n    -------\n    int\n        \u53d6\u5f97\u3057\u305f\u5024. `ControlTable`\u306e\u5185\u5bb9\u306b\u5f93\u3063\u305f\u6574\u6570\u5024.\n\n    Raises\n    ------\n    DynamixelCommError\n        \u8aad\u307f\u8fbc\u307f\u306b\u5931\u6557\u3057\u305f\u5834\u5408.\n\n    \"\"\"\n    read_functions = {\n        1: self.packet_handler.read1ByteTxRx,\n        2: self.packet_handler.read2ByteTxRx,\n        4: self.packet_handler.read4ByteTxRx,\n    }\n    read_func = read_functions[control_table.num_bytes]\n\n    value, dxl_comm_result, dxl_error = read_func(\n        port=self.port_handler,\n        dxl_id=self.servo_id,\n        address=control_table.address,\n    )\n    if dxl_comm_result == dynamixel_sdk.COMM_SUCCESS:\n        return cast_value(value, dtype=control_table.dtype)\n\n    msg = f\"{self.servo_id=}\u306e{control_table}\u306e\u8aad\u307f\u53d6\u308a\u306b\u5931\u6557\u3057\u307e\u3057\u305f.\"\n    raise DynamixelCommError(msg, dxl_comm_result, dxl_error)\n</code></pre>"},{"location":"api/dynamixel/#src.robopy.dynamixel.DynamixelDriver.write","title":"<code>write(control_table, value)</code>","text":"<p>Dynamixel\u306b\u30c7\u30fc\u30bf\u3092\u66f8\u304d\u8fbc\u3080.</p> Example <pre><code>from robopy import DynamixelDriver, ControlTable\n\ndynamixel = DynamixelDriver(...)\ndynamixel.write(ControlTable.TORQUE_ENABLE, 1)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>control_table</code> <code>ControlTable</code> <p>\u66f8\u304d\u8fbc\u3080\u30c7\u30fc\u30bf\u306e\u7a2e\u985e.</p> required <code>value</code> <code>int</code> <p>\u66f8\u304d\u8fbc\u3080\u5024.</p> required <p>Raises:</p> Type Description <code>DynamixelCommError</code> <p>\u901a\u4fe1\u306b\u5931\u6557\u3057\u305f\u5834\u5408. read-only\u306e\u5834\u5408\u3084\u30c8\u30eb\u30af\u6709\u52b9\u6642\u306envm\u3078\u306e\u66f8\u304d\u8fbc\u307f\u3082\u542b\u3080.</p> Source code in <code>src/robopy/dynamixel.py</code> <pre><code>def write(self, control_table: ControlTable, value: int) -&gt; None:\n    \"\"\"\n    Dynamixel\u306b\u30c7\u30fc\u30bf\u3092\u66f8\u304d\u8fbc\u3080.\n\n    Example\n    -------\n    ```python\n    from robopy import DynamixelDriver, ControlTable\n\n    dynamixel = DynamixelDriver(...)\n    dynamixel.write(ControlTable.TORQUE_ENABLE, 1)\n    ```\n\n    Parameters\n    ----------\n    control_table : ControlTable\n        \u66f8\u304d\u8fbc\u3080\u30c7\u30fc\u30bf\u306e\u7a2e\u985e.\n    value : int\n        \u66f8\u304d\u8fbc\u3080\u5024.\n\n    Raises\n    ------\n    DynamixelCommError\n        \u901a\u4fe1\u306b\u5931\u6557\u3057\u305f\u5834\u5408.\n        read-only\u306e\u5834\u5408\u3084\u30c8\u30eb\u30af\u6709\u52b9\u6642\u306envm\u3078\u306e\u66f8\u304d\u8fbc\u307f\u3082\u542b\u3080.\n\n    \"\"\"\n    write_functions = {\n        1: self.packet_handler.write1ByteTxRx,\n        2: self.packet_handler.write2ByteTxRx,\n        4: self.packet_handler.write4ByteTxRx,\n    }\n    write_func = write_functions[control_table.num_bytes]\n    dxl_comm_result, dxl_error = write_func(\n        port=self.port_handler,\n        dxl_id=self.servo_id,\n        address=control_table.address,\n        data=value,\n    )\n    if dxl_comm_result == dynamixel_sdk.COMM_SUCCESS:\n        return\n\n    msg = f\"{self.servo_id=}\u306e{control_table}\u306e\u66f8\u304d\u8fbc\u307f\u306b\u5931\u6557\u3057\u307e\u3057\u305f.\"\n    raise DynamixelCommError(msg, dxl_comm_result, dxl_error)\n</code></pre>"},{"location":"api/dynamixel/#src.robopy.dynamixel.DynamixelCommError","title":"<code>DynamixelCommError</code>","text":"<p>               Bases: <code>ConnectionError</code></p> <p>Dynamixel\u306e\u901a\u4fe1\u30a8\u30e9\u30fc\u3092\u8868\u3059\u4f8b\u5916.</p> <p><code>dxl_comm_result_code</code> \u3068 <code>dxl_error_code</code> \u306f <code>dynamixel_sdk.packetHandler</code> \u306eread/write\u7cfb\u30e1\u30bd\u30c3\u30c9\u306e\u8fd4\u308a\u5024\u306b\u5bfe\u5fdc\u3059\u308b.</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>str</code> <p>\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8.</p> required <code>dxl_comm_result_code</code> <code>int</code> <p><code>dynamixel_sdk.packetHandler</code> \u306e\u901a\u4fe1\u7d50\u679c\u30b3\u30fc\u30c9.</p> required <code>dxl_error_code</code> <code>int</code> <p><code>dynamixel_sdk.packetHandler</code> \u306e\u30a8\u30e9\u30fc\u30b3\u30fc\u30c9.</p> required Source code in <code>src/robopy/dynamixel.py</code> <pre><code>class DynamixelCommError(ConnectionError):\n    \"\"\"\n    Dynamixel\u306e\u901a\u4fe1\u30a8\u30e9\u30fc\u3092\u8868\u3059\u4f8b\u5916.\n\n    `dxl_comm_result_code` \u3068 `dxl_error_code` \u306f\n    `dynamixel_sdk.packetHandler` \u306eread/write\u7cfb\u30e1\u30bd\u30c3\u30c9\u306e\u8fd4\u308a\u5024\u306b\u5bfe\u5fdc\u3059\u308b.\n\n    Parameters\n    ----------\n    message : str\n        \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8.\n    dxl_comm_result_code : int\n        `dynamixel_sdk.packetHandler` \u306e\u901a\u4fe1\u7d50\u679c\u30b3\u30fc\u30c9.\n    dxl_error_code : int\n        `dynamixel_sdk.packetHandler` \u306e\u30a8\u30e9\u30fc\u30b3\u30fc\u30c9.\n\n    \"\"\"\n\n    def __init__(\n        self,\n        message: str,\n        dxl_comm_result_code: int,\n        dxl_error_code: int,\n    ) -&gt; None:\n        packet_handler = dynamixel_sdk.Protocol2PacketHandler()\n        dxl_comm_result = packet_handler.getTxRxResult(dxl_comm_result_code)\n        dxl_error = packet_handler.getRxPacketError(dxl_error_code)\n\n        message = message.replace(\"\\n\", \"\") + \"\\n\"\n        message += f\"{dxl_comm_result=}\\n{dxl_error=}\"\n\n        super().__init__(message)\n</code></pre>"},{"location":"api/robot/","title":"robot.py","text":"<p>Dynamixel \u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u30ed\u30dc\u30c3\u30c8\u3092\u5236\u5fa1\u3059\u308b\u30af\u30e9\u30b9.</p> References <ul> <li>AlexanderKoch-Koch/low_cost_robot</li> <li>wuphilipp/gello_software</li> </ul>"},{"location":"api/robot/#src.robopy.robot.RobotDriver","title":"<code>RobotDriver</code>","text":"<p>\u30ed\u30dc\u30c3\u30c8\u5168\u4f53\u306e\u30af\u30e9\u30b9.</p> <p>Parameters:</p> Name Type Description Default <code>port_name</code> <code>str</code> <p>\u30b7\u30ea\u30a2\u30eb\u30dd\u30fc\u30c8\u306e\u540d\u524d. <code>ls /dev</code> \u3067\u78ba\u8a8d\u3067\u304d\u308b.</p> required <code>baudrate</code> <code>int</code> <p>\u30dc\u30fc\u30ec\u30fc\u30c8. \u30b5\u30fc\u30dc\u306b\u8a2d\u5b9a\u3055\u308c\u305f\u5024\u3068\u63c3\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b.</p> required <code>servo_ids</code> <code>list[int]</code> <p>\u30b5\u30fc\u30dc\u306eID. packetHandler\u306e\u901a\u4fe1\u306e\u78ba\u8a8d\u306b\u4f7f\u7528\u3059\u308b.</p> required <p>Raises:</p> Type Description <code>RuntimeError</code> <p>\u6b21\u306e\u3046\u3061\u3069\u308c\u304b\u304c\u767a\u751f\u3057\u305f\u5834\u5408.</p> <ul> <li>\u30dd\u30fc\u30c8\u306e\u30aa\u30fc\u30d7\u30f3\u306b\u5931\u6557\u3057\u305f\u5834\u5408</li> <li>\u30dc\u30fc\u30ec\u30fc\u30c8\u306e\u8a2d\u5b9a\u306b\u5931\u6557\u3057\u305f\u5834\u5408</li> <li>\u5168\u30b5\u30fc\u30dc\u306eping\u306b\u5931\u6557\u3057\u305f\u5834\u5408</li> </ul> Source code in <code>src/robopy/robot.py</code> <pre><code>class RobotDriver:\n    \"\"\"\n    \u30ed\u30dc\u30c3\u30c8\u5168\u4f53\u306e\u30af\u30e9\u30b9.\n\n    Parameters\n    ----------\n    port_name : str\n        \u30b7\u30ea\u30a2\u30eb\u30dd\u30fc\u30c8\u306e\u540d\u524d.\n        `ls /dev` \u3067\u78ba\u8a8d\u3067\u304d\u308b.\n    baudrate : int\n        \u30dc\u30fc\u30ec\u30fc\u30c8. \u30b5\u30fc\u30dc\u306b\u8a2d\u5b9a\u3055\u308c\u305f\u5024\u3068\u63c3\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b.\n    servo_ids : list[int]\n        \u30b5\u30fc\u30dc\u306eID. packetHandler\u306e\u901a\u4fe1\u306e\u78ba\u8a8d\u306b\u4f7f\u7528\u3059\u308b.\n\n    Raises\n    ------\n    RuntimeError\n        \u6b21\u306e\u3046\u3061\u3069\u308c\u304b\u304c\u767a\u751f\u3057\u305f\u5834\u5408.\n\n        - \u30dd\u30fc\u30c8\u306e\u30aa\u30fc\u30d7\u30f3\u306b\u5931\u6557\u3057\u305f\u5834\u5408\n        - \u30dc\u30fc\u30ec\u30fc\u30c8\u306e\u8a2d\u5b9a\u306b\u5931\u6557\u3057\u305f\u5834\u5408\n        - \u5168\u30b5\u30fc\u30dc\u306eping\u306b\u5931\u6557\u3057\u305f\u5834\u5408\n\n    \"\"\"\n\n    def __init__(\n        self,\n        port_name: str,\n        baudrate: int,\n        servo_ids: list[int],\n    ) -&gt; None:\n        self.port_handler = dynamixel_sdk.PortHandler(port_name=port_name)\n        self.packet_handler = dynamixel_sdk.Protocol2PacketHandler()\n\n        if not self.port_handler.openPort():\n            msg = f\"Failed to open port {port_name}\"\n            raise RuntimeError(msg)\n\n        if not self.port_handler.setBaudRate(baudrate):\n            msg = f\"Failed to set baudrate to {baudrate}\"\n            raise RuntimeError(msg)\n\n        for servo_id in servo_ids:\n            _, comm_result, _ = self.packet_handler.ping(\n                port=self.port_handler,\n                dxl_id=servo_id,\n            )\n            if comm_result != dynamixel_sdk.COMM_SUCCESS:\n                msg = f\"Failed to ping servo {servo_id}\"\n                raise RuntimeError(msg)\n\n        self.servos = [\n            DynamixelDriver(\n                port_handler=self.port_handler,\n                packet_handler=self.packet_handler,\n                servo_id=servo_id,\n            )\n            for servo_id in servo_ids\n        ]\n\n    def write(self, control_table: ControlTable, values: list[int]) -&gt; None:\n        \"\"\"\n        \u5404\u30b5\u30fc\u30dc\u306b\u5024\u3092\u66f8\u304d\u8fbc\u3080.\n\n        Note\n        ----\n        - \u30b5\u30fc\u30dc\u306eID\u306e\u9806\u756a\u3068\u5024\u306e\u9806\u756a\u306f\u4e00\u81f4\u3057\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b.\n\n        Example\n        -------\n        ```python\n        from robopy import RobotDriver, ControlTable\n\n        robot = RobotDriver(servo_ids=[1, 2, 3, 4, 5])\n        robot.write(ControlTable.TORQUE_ENABLE, [1] * 5)\n        ```\n\n        Parameters\n        ----------\n        control_table : ControlTable\n            \u66f8\u304d\u8fbc\u3080\u30c7\u30fc\u30bf\u306e\u7a2e\u985e.\n        values : list[int]\n            \u66f8\u304d\u8fbc\u3080\u5024.\n\n        \"\"\"\n        for servo, value in zip(self.servos, values):\n            servo.write(control_table, value)\n\n    def read(self, control_table: ControlTable) -&gt; list[int]:\n        \"\"\"\n        \u5404\u30b5\u30fc\u30dc\u304b\u3089\u5024\u3092\u8aad\u307f\u53d6\u308b.\n\n        Example\n        -------\n        ```python\n        from robopy import RobotDriver, ControlTable\n\n        robot = RobotDriver(...)\n        while True:\n            position = robot.read(ControlTable.PRESENT_POSITION)\n            print(f\"Current position: {position}\")\n        ```\n\n        Parameters\n        ----------\n        control_table : ControlTable\n            \u8aad\u307f\u53d6\u308b\u30c7\u30fc\u30bf\u306e\u7a2e\u985e.\n\n        Returns\n        -------\n        list[int]\n            \u5404\u30b5\u30fc\u30dc\u304b\u3089\u306e\u5024.\n\n        \"\"\"\n        return [servo.read(control_table) for servo in self.servos]\n</code></pre>"},{"location":"api/robot/#src.robopy.robot.RobotDriver.write","title":"<code>write(control_table, values)</code>","text":"<p>\u5404\u30b5\u30fc\u30dc\u306b\u5024\u3092\u66f8\u304d\u8fbc\u3080.</p> Note <ul> <li>\u30b5\u30fc\u30dc\u306eID\u306e\u9806\u756a\u3068\u5024\u306e\u9806\u756a\u306f\u4e00\u81f4\u3057\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b.</li> </ul> Example <pre><code>from robopy import RobotDriver, ControlTable\n\nrobot = RobotDriver(servo_ids=[1, 2, 3, 4, 5])\nrobot.write(ControlTable.TORQUE_ENABLE, [1] * 5)\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>control_table</code> <code>ControlTable</code> <p>\u66f8\u304d\u8fbc\u3080\u30c7\u30fc\u30bf\u306e\u7a2e\u985e.</p> required <code>values</code> <code>list[int]</code> <p>\u66f8\u304d\u8fbc\u3080\u5024.</p> required Source code in <code>src/robopy/robot.py</code> <pre><code>def write(self, control_table: ControlTable, values: list[int]) -&gt; None:\n    \"\"\"\n    \u5404\u30b5\u30fc\u30dc\u306b\u5024\u3092\u66f8\u304d\u8fbc\u3080.\n\n    Note\n    ----\n    - \u30b5\u30fc\u30dc\u306eID\u306e\u9806\u756a\u3068\u5024\u306e\u9806\u756a\u306f\u4e00\u81f4\u3057\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b.\n\n    Example\n    -------\n    ```python\n    from robopy import RobotDriver, ControlTable\n\n    robot = RobotDriver(servo_ids=[1, 2, 3, 4, 5])\n    robot.write(ControlTable.TORQUE_ENABLE, [1] * 5)\n    ```\n\n    Parameters\n    ----------\n    control_table : ControlTable\n        \u66f8\u304d\u8fbc\u3080\u30c7\u30fc\u30bf\u306e\u7a2e\u985e.\n    values : list[int]\n        \u66f8\u304d\u8fbc\u3080\u5024.\n\n    \"\"\"\n    for servo, value in zip(self.servos, values):\n        servo.write(control_table, value)\n</code></pre>"},{"location":"api/robot/#src.robopy.robot.RobotDriver.read","title":"<code>read(control_table)</code>","text":"<p>\u5404\u30b5\u30fc\u30dc\u304b\u3089\u5024\u3092\u8aad\u307f\u53d6\u308b.</p> Example <pre><code>from robopy import RobotDriver, ControlTable\n\nrobot = RobotDriver(...)\nwhile True:\n    position = robot.read(ControlTable.PRESENT_POSITION)\n    print(f\"Current position: {position}\")\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>control_table</code> <code>ControlTable</code> <p>\u8aad\u307f\u53d6\u308b\u30c7\u30fc\u30bf\u306e\u7a2e\u985e.</p> required <p>Returns:</p> Type Description <code>list[int]</code> <p>\u5404\u30b5\u30fc\u30dc\u304b\u3089\u306e\u5024.</p> Source code in <code>src/robopy/robot.py</code> <pre><code>def read(self, control_table: ControlTable) -&gt; list[int]:\n    \"\"\"\n    \u5404\u30b5\u30fc\u30dc\u304b\u3089\u5024\u3092\u8aad\u307f\u53d6\u308b.\n\n    Example\n    -------\n    ```python\n    from robopy import RobotDriver, ControlTable\n\n    robot = RobotDriver(...)\n    while True:\n        position = robot.read(ControlTable.PRESENT_POSITION)\n        print(f\"Current position: {position}\")\n    ```\n\n    Parameters\n    ----------\n    control_table : ControlTable\n        \u8aad\u307f\u53d6\u308b\u30c7\u30fc\u30bf\u306e\u7a2e\u985e.\n\n    Returns\n    -------\n    list[int]\n        \u5404\u30b5\u30fc\u30dc\u304b\u3089\u306e\u5024.\n\n    \"\"\"\n    return [servo.read(control_table) for servo in self.servos]\n</code></pre>"}]}